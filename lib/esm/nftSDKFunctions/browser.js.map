{"version":3,"file":"browser.js","names":["createCollectionFunction","increaseNFTSupply","logIn","mintSharedMetadataFunction","mintUniqueMetadataFunction","estimateNftMintingInHbar","estimateNftMintingInDollars","HederaNFTSDK","constructor","accountId","privateKey","network","localNode","localMirrorNode","mirrorNodeUrl","client","myAccountId","myPrivateKey","createCollection","collectionName","collectionSymbol","treasuryAccountPrivateKey","treasuryAccount","keys","maxSupply","customFees","expirationTime","autoRenewAccount","autoRenewAccountPrivateKey","autoRenewPeriod","memo","estimateCreateCollectionInDollars","_","Error","estimateCreateCollectionInHbar","amountOfNfts","mintSharedMetadata","tokenId","amount","batchSize","metaData","supplyKey","mintUniqueMetadata","pathToMetadataURIsFile","metadata","metadataArray","nftId"],"sources":["../../../src/nftSDKFunctions/browser.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Client, NftId, PrivateKey } from '@hashgraph/sdk';\nimport { CreateCollectionKeysType, CustomFeeType } from '../types/create-collection';\nimport { Network } from '../types/mint-token';\nimport { createCollectionFunction } from './create-collection';\nimport { increaseNFTSupply } from './increase-nft-supply';\nimport { logIn } from './log-in';\nimport { mintSharedMetadataFunction } from './mint-shared-metadata-function';\nimport { mintUniqueMetadataFunction } from './mint-unique-metadata-function.browser';\nimport { LocalNode } from '../types/login';\nimport { estimateNftMintingInHbar } from './estimate-nft-minting-in-hbar';\nimport { estimateNftMintingInDollars } from './estimate-nft-minting-in-dollars';\n\nexport class HederaNFTSDK /** Browser */ {\n  accountId: string;\n  privateKey: PrivateKey;\n  client: Client;\n  network: Network;\n  mirrorNodeUrl?: string;\n\n  constructor(\n    accountId: string,\n    privateKey: PrivateKey,\n    network: Network,\n    localNode?: LocalNode,\n    localMirrorNode?: string,\n    mirrorNodeUrl?: string\n  ) {\n    this.accountId = accountId;\n    this.privateKey = privateKey;\n    this.client = logIn({\n      myAccountId: accountId,\n      myPrivateKey: privateKey,\n      network: network,\n      localNode: localNode,\n      localMirrorNode: localMirrorNode,\n    });\n    this.network = network;\n    this.mirrorNodeUrl = mirrorNodeUrl;\n  }\n\n  createCollection({\n    collectionName,\n    collectionSymbol,\n    treasuryAccountPrivateKey,\n    treasuryAccount,\n    keys,\n    maxSupply,\n    customFees,\n    expirationTime,\n    autoRenewAccount,\n    autoRenewAccountPrivateKey,\n    autoRenewPeriod,\n    memo,\n  }: {\n    collectionName: string;\n    collectionSymbol: string;\n    treasuryAccountPrivateKey?: PrivateKey;\n    treasuryAccount?: string;\n    keys?: CreateCollectionKeysType;\n    maxSupply?: number;\n    customFees?: CustomFeeType[];\n    expirationTime?: Date;\n    autoRenewAccount?: string;\n    autoRenewAccountPrivateKey?: PrivateKey;\n    autoRenewPeriod?: number;\n    memo?: string;\n  }) {\n    return createCollectionFunction({\n      client: this.client,\n      collectionName,\n      collectionSymbol,\n      keys,\n      myPrivateKey: this.privateKey,\n      treasuryAccount,\n      treasuryAccountPrivateKey,\n      maxSupply,\n      customFees,\n      expirationTime,\n      autoRenewAccount,\n      autoRenewAccountPrivateKey,\n      autoRenewPeriod,\n      memo,\n    });\n  }\n\n  estimateCreateCollectionInDollars(_: {\n    collectionName: string;\n    collectionSymbol: string;\n    treasuryAccountPrivateKey?: PrivateKey;\n    treasuryAccount?: string;\n    keys?: CreateCollectionKeysType;\n    customFees?: CustomFeeType[];\n  }) {\n    throw new Error('No estimateCreateCollectionInDollars browser implementation');\n  }\n\n  estimateCreateCollectionInHbar(_: {\n    collectionName: string;\n    collectionSymbol: string;\n    treasuryAccountPrivateKey?: PrivateKey;\n    treasuryAccount?: string;\n    keys?: CreateCollectionKeysType;\n    customFees?: CustomFeeType[];\n  }) {\n    throw new Error('No estimateCreateCollectionInHbar browser implementation');\n  }\n\n  estimateNftMintingInHbar({ amountOfNfts }: { amountOfNfts: number }) {\n    return estimateNftMintingInHbar({ amountOfNfts, mirrorNodeUrl: this.mirrorNodeUrl, network: this.network });\n  }\n\n  estimateNftMintingInDollars({ amountOfNfts }: { amountOfNfts: number }) {\n    return estimateNftMintingInDollars({ amountOfNfts });\n  }\n\n  mintSharedMetadata({\n    tokenId,\n    amount,\n    batchSize = 5,\n    metaData,\n    supplyKey,\n  }: {\n    tokenId: string;\n    amount: number;\n    batchSize?: number;\n    metaData: string;\n    supplyKey?: PrivateKey;\n  }) {\n    return mintSharedMetadataFunction({\n      client: this.client,\n      tokenId,\n      amount,\n      batchSize,\n      metaData,\n      supplyKey: supplyKey ? supplyKey : this.privateKey,\n    });\n  }\n\n  mintUniqueMetadata({\n    tokenId,\n    batchSize = 5,\n    supplyKey,\n    pathToMetadataURIsFile,\n    metadata,\n  }: {\n    tokenId: string;\n    batchSize?: number;\n    supplyKey: PrivateKey;\n    pathToMetadataURIsFile?: string;\n    metadata?: string[];\n  }) {\n    return mintUniqueMetadataFunction({\n      client: this.client,\n      tokenId,\n      batchSize,\n      supplyKey: supplyKey,\n      pathToMetadataURIsFile,\n      metadataArray: metadata,\n    });\n  }\n\n  increaseNFTSupply({\n    nftId,\n    amount,\n    batchSize = 5,\n    supplyKey,\n  }: {\n    nftId: NftId;\n    amount: number;\n    batchSize?: number;\n    supplyKey?: PrivateKey;\n  }) {\n    return increaseNFTSupply({\n      client: this.client,\n      network: this.network,\n      nftId,\n      amount,\n      batchSize,\n      supplyKey: supplyKey ? supplyKey : this.privateKey,\n      mirrorNodeUrl: this.mirrorNodeUrl,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}