{"version":3,"file":"log-in.js","names":["Client","dictionary","logIn","myAccountId","myPrivateKey","network","localNode","localMirrorNode","Error","createCollection","myAccountIdRequired","myPrivateKeyRequired","handleLocalNode","forName","setOperator","config","client","forNetwork","forLocalNode","setMirrorNetwork"],"sources":["../../../src/nftSDKFunctions/log-in.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Client } from '@hashgraph/sdk';\nimport { LogInType } from '../types/login';\nimport { dictionary } from '../utils/constants/dictionary';\n\nexport const logIn = ({ myAccountId, myPrivateKey, network, localNode, localMirrorNode }: LogInType): Client => {\n  if (!myAccountId) throw new Error(dictionary.createCollection.myAccountIdRequired);\n  if (!myPrivateKey) throw new Error(dictionary.createCollection.myPrivateKeyRequired);\n\n  if (network == 'localnode') {\n    return handleLocalNode({ myAccountId, myPrivateKey, network, localNode, localMirrorNode });\n  } else {\n    return Client.forName(network).setOperator(myAccountId, myPrivateKey);\n  }\n};\n\nconst handleLocalNode = (config: LogInType): Client => {\n  const client = config.localNode ? Client.forNetwork(config.localNode) : Client.forLocalNode();\n\n  if (config.localMirrorNode) {\n    client.setMirrorNetwork(config.localMirrorNode);\n  }\n\n  client.setOperator(config.myAccountId, config.myPrivateKey);\n  return client;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,MAAM,QAAQ,gBAAgB;AAEvC,SAASC,UAAU,QAAQ,+BAA+B;AAE1D,OAAO,MAAMC,KAAK,GAAGA,CAAC;EAAEC,WAAW;EAAEC,YAAY;EAAEC,OAAO;EAAEC,SAAS;EAAEC;AAA2B,CAAC,KAAa;EAC9G,IAAI,CAACJ,WAAW,EAAE,MAAM,IAAIK,KAAK,CAACP,UAAU,CAACQ,gBAAgB,CAACC,mBAAmB,CAAC;EAClF,IAAI,CAACN,YAAY,EAAE,MAAM,IAAII,KAAK,CAACP,UAAU,CAACQ,gBAAgB,CAACE,oBAAoB,CAAC;EAEpF,IAAIN,OAAO,IAAI,WAAW,EAAE;IAC1B,OAAOO,eAAe,CAAC;MAAET,WAAW;MAAEC,YAAY;MAAEC,OAAO;MAAEC,SAAS;MAAEC;IAAgB,CAAC,CAAC;EAC5F,CAAC,MAAM;IACL,OAAOP,MAAM,CAACa,OAAO,CAACR,OAAO,CAAC,CAACS,WAAW,CAACX,WAAW,EAAEC,YAAY,CAAC;EACvE;AACF,CAAC;AAED,MAAMQ,eAAe,GAAIG,MAAiB,IAAa;EACrD,MAAMC,MAAM,GAAGD,MAAM,CAACT,SAAS,GAAGN,MAAM,CAACiB,UAAU,CAACF,MAAM,CAACT,SAAS,CAAC,GAAGN,MAAM,CAACkB,YAAY,CAAC,CAAC;EAE7F,IAAIH,MAAM,CAACR,eAAe,EAAE;IAC1BS,MAAM,CAACG,gBAAgB,CAACJ,MAAM,CAACR,eAAe,CAAC;EACjD;EAEAS,MAAM,CAACF,WAAW,CAACC,MAAM,CAACZ,WAAW,EAAEY,MAAM,CAACX,YAAY,CAAC;EAC3D,OAAOY,MAAM;AACf,CAAC","ignoreList":[]}