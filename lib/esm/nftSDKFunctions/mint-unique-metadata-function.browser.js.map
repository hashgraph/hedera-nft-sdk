{"version":3,"file":"mint-unique-metadata-function.browser.js","names":["dictionary","validatePropsForUniqueNFTMinting","MintingError","mintToken","mintUniqueMetadataFunction","client","tokenId","batchSize","supplyKey","metadataArray","props","Error","hederaActions","pathToMetadataURIsFileNotSupportedInBrowser","mintedNFTs","metaData","length","metadataRequired","numberOfCalls","Math","ceil","i","batch","slice","mintTokenReceipt","result","serials","map","longValue","index","content","serialNumber","toNumber","push","error","mintingError","flat"],"sources":["../../../src/nftSDKFunctions/mint-unique-metadata-function.browser.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { dictionary } from '../utils/constants/dictionary';\nimport { MintedNFTType, MintUniqueTokenType } from '../types/mint-token';\nimport { validatePropsForUniqueNFTMinting } from '../utils/validate-props';\nimport { MintingError } from '../utils/minting-error';\nimport { mintToken } from './mint-token';\n\nexport const mintUniqueMetadataFunction /** Browser */ = async ({\n  client,\n  tokenId,\n  batchSize = 5,\n  supplyKey,\n  metadataArray,\n  ...props\n}: MintUniqueTokenType) => {\n  if ('pathToMetadataURIsFile' in props) {\n    throw new Error(dictionary.hederaActions.pathToMetadataURIsFileNotSupportedInBrowser);\n  }\n\n  validatePropsForUniqueNFTMinting({\n    batchSize,\n    tokenId,\n    supplyKey,\n    metadataArray,\n  });\n  const mintedNFTs: MintedNFTType[] = [];\n\n  const metaData = metadataArray || [];\n  if (!metaData.length) throw new Error(dictionary.hederaActions.metadataRequired);\n\n  try {\n    const numberOfCalls = Math.ceil(metaData.length / batchSize);\n    for (let i = 0; i < numberOfCalls; i++) {\n      const batch = metaData.slice(i * batchSize, (i + 1) * batchSize);\n      const mintTokenReceipt = await mintToken(batch, tokenId, supplyKey, client);\n\n      const result: MintedNFTType[] = mintTokenReceipt?.serials.map((longValue, index) => {\n        return {\n          content: batch[index],\n          serialNumber: longValue.toNumber(),\n        };\n      });\n\n      if (result) {\n        mintedNFTs.push(...result);\n      }\n    }\n  } catch (error) {\n    throw new MintingError(`${dictionary.hederaActions.mintingError} ${error}`, mintedNFTs.flat());\n  }\n\n  return mintedNFTs.flat();\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,+BAA+B;AAE1D,SAASC,gCAAgC,QAAQ,yBAAyB;AAC1E,SAASC,YAAY,QAAQ,wBAAwB;AACrD,SAASC,SAAS,QAAQ,cAAc;AAExC,OAAO,MAAMC,0BAA0B,CAAC,iBAAiB,MAAAA,CAAO;EAC9DC,MAAM;EACNC,OAAO;EACPC,SAAS,GAAG,CAAC;EACbC,SAAS;EACTC,aAAa;EACb,GAAGC;AACgB,CAAC,KAAK;EACzB,IAAI,wBAAwB,IAAIA,KAAK,EAAE;IACrC,MAAM,IAAIC,KAAK,CAACX,UAAU,CAACY,aAAa,CAACC,2CAA2C,CAAC;EACvF;EAEAZ,gCAAgC,CAAC;IAC/BM,SAAS;IACTD,OAAO;IACPE,SAAS;IACTC;EACF,CAAC,CAAC;EACF,MAAMK,UAA2B,GAAG,EAAE;EAEtC,MAAMC,QAAQ,GAAGN,aAAa,IAAI,EAAE;EACpC,IAAI,CAACM,QAAQ,CAACC,MAAM,EAAE,MAAM,IAAIL,KAAK,CAACX,UAAU,CAACY,aAAa,CAACK,gBAAgB,CAAC;EAEhF,IAAI;IACF,MAAMC,aAAa,GAAGC,IAAI,CAACC,IAAI,CAACL,QAAQ,CAACC,MAAM,GAAGT,SAAS,CAAC;IAC5D,KAAK,IAAIc,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,aAAa,EAAEG,CAAC,EAAE,EAAE;MACtC,MAAMC,KAAK,GAAGP,QAAQ,CAACQ,KAAK,CAACF,CAAC,GAAGd,SAAS,EAAE,CAACc,CAAC,GAAG,CAAC,IAAId,SAAS,CAAC;MAChE,MAAMiB,gBAAgB,GAAG,MAAMrB,SAAS,CAACmB,KAAK,EAAEhB,OAAO,EAAEE,SAAS,EAAEH,MAAM,CAAC;MAE3E,MAAMoB,MAAuB,GAAGD,gBAAgB,EAAEE,OAAO,CAACC,GAAG,CAAC,CAACC,SAAS,EAAEC,KAAK,KAAK;QAClF,OAAO;UACLC,OAAO,EAAER,KAAK,CAACO,KAAK,CAAC;UACrBE,YAAY,EAAEH,SAAS,CAACI,QAAQ,CAAC;QACnC,CAAC;MACH,CAAC,CAAC;MAEF,IAAIP,MAAM,EAAE;QACVX,UAAU,CAACmB,IAAI,CAAC,GAAGR,MAAM,CAAC;MAC5B;IACF;EACF,CAAC,CAAC,OAAOS,KAAK,EAAE;IACd,MAAM,IAAIhC,YAAY,CAAE,GAAEF,UAAU,CAACY,aAAa,CAACuB,YAAa,IAAGD,KAAM,EAAC,EAAEpB,UAAU,CAACsB,IAAI,CAAC,CAAC,CAAC;EAChG;EAEA,OAAOtB,UAAU,CAACsB,IAAI,CAAC,CAAC;AAC1B,CAAC","ignoreList":[]}