{"version":3,"file":"create-collection.js","names":["AccountId","TokenCreateTransaction","TokenSupplyType","TokenType","dictionary","validatePropsForCreateCollection","createCollectionFunction","client","myPrivateKey","collectionName","collectionSymbol","keys","treasuryAccount","treasuryAccountPrivateKey","maxSupply","customFees","expirationTime","autoRenewAccount","autoRenewAccountPrivateKey","autoRenewPeriod","memo","treasuryAccountId","getOperator","accountId","treasuryAccountPrivateKeyId","transaction","setTokenName","setTokenSymbol","setTokenType","NonFungibleUnique","setSupplyKey","supply","setTreasuryAccountId","admin","setAdminKey","KYC","setKycKey","freeze","setFreezeKey","wipe","setWipeKey","feeSchedule","setFeeScheduleKey","pause","setPauseKey","setSupplyType","Finite","setMaxSupply","setCustomFees","setExpirationTime","setAutoRenewAccountId","fromString","setAutoRenewPeriod","setTokenMemo","freezeWith","signTx","sign","txResponse","execute","receipt","getReceipt","tokenId","Error","createCollection","collectionNotCreated","toString"],"sources":["../../../src/nftSDKFunctions/create-collection.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { AccountId, PrivateKey, TokenCreateTransaction, TokenSupplyType, TokenType } from '@hashgraph/sdk';\nimport { dictionary } from '../utils/constants/dictionary';\nimport { CreateCollectionType } from '../types/create-collection';\nimport { validatePropsForCreateCollection } from '../utils/validate-props';\n\nexport const createCollectionFunction = async ({\n  client,\n  myPrivateKey,\n  collectionName,\n  collectionSymbol,\n  keys,\n  treasuryAccount,\n  treasuryAccountPrivateKey,\n  maxSupply,\n  customFees,\n  expirationTime,\n  autoRenewAccount,\n  autoRenewAccountPrivateKey,\n  autoRenewPeriod,\n  memo,\n}: CreateCollectionType): Promise<string> => {\n  validatePropsForCreateCollection({\n    collectionName,\n    collectionSymbol,\n    treasuryAccount,\n    treasuryAccountPrivateKey,\n    customFees,\n    expirationTime,\n    autoRenewAccount,\n    autoRenewAccountPrivateKey,\n    autoRenewPeriod,\n    memo,\n  });\n\n  const treasuryAccountId = treasuryAccount ? treasuryAccount : client.getOperator()!.accountId;\n  const treasuryAccountPrivateKeyId: PrivateKey = treasuryAccountPrivateKey ? treasuryAccountPrivateKey : myPrivateKey;\n\n  let transaction = new TokenCreateTransaction()\n    .setTokenName(collectionName)\n    .setTokenSymbol(collectionSymbol)\n    .setTokenType(TokenType.NonFungibleUnique)\n    .setSupplyKey(keys?.supply || myPrivateKey)\n    .setTreasuryAccountId(treasuryAccountId);\n\n  if (keys?.admin) {\n    transaction = transaction.setAdminKey(keys?.admin);\n  }\n\n  if (keys?.KYC) {\n    transaction = transaction.setKycKey(keys?.KYC);\n  }\n\n  if (keys?.freeze) {\n    transaction = transaction.setFreezeKey(keys?.freeze);\n  }\n\n  if (keys?.wipe) {\n    transaction = transaction.setWipeKey(keys?.wipe);\n  }\n\n  if (keys?.feeSchedule) {\n    transaction = transaction.setFeeScheduleKey(keys?.feeSchedule);\n  }\n\n  if (keys?.pause) {\n    transaction = transaction.setPauseKey(keys?.pause);\n  }\n\n  if (maxSupply) {\n    transaction = transaction.setSupplyType(TokenSupplyType.Finite);\n    transaction = transaction.setMaxSupply(maxSupply);\n  }\n\n  if (customFees) {\n    transaction = transaction.setCustomFees(customFees);\n  }\n\n  if (expirationTime) {\n    transaction = transaction.setExpirationTime(expirationTime);\n  }\n\n  if (autoRenewAccount) {\n    transaction = transaction.setAutoRenewAccountId(AccountId.fromString(autoRenewAccount));\n  }\n\n  if (autoRenewPeriod) {\n    transaction = transaction.setAutoRenewPeriod(autoRenewPeriod);\n  }\n\n  if (memo) {\n    transaction = transaction.setTokenMemo(memo);\n  }\n\n  transaction = transaction.freezeWith(client);\n\n  let signTx = await transaction.sign(<PrivateKey>treasuryAccountPrivateKeyId);\n\n  if (keys?.admin) {\n    signTx = await transaction.sign(<PrivateKey>keys?.admin);\n  }\n\n  if (autoRenewAccountPrivateKey) {\n    signTx = await transaction.sign(autoRenewAccountPrivateKey);\n  }\n\n  const txResponse = await signTx.execute(client);\n\n  const receipt = await txResponse.getReceipt(client);\n\n  if (!receipt.tokenId) {\n    throw new Error(dictionary.createCollection.collectionNotCreated);\n  }\n\n  return receipt.tokenId.toString();\n};\n"],"mappings":"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","ignoreList":[]}