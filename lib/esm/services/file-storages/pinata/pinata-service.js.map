{"version":3,"file":"pinata-service.js","names":["dictionary","v4","axios","PinataService","serviceUrl","uploadUrl","constructor","pinataJwtKey","pinataApiKey","pinataSecretApiKey","Error","errors","pinataError","instance","create","baseURL","uploadFile","file","formData","FormData","append","JSON","stringify","name","metadataUriVersion","authorization","Authorization","pinata_api_key","pinata_secret_api_key","res","post","headers","data","IpfsHash"],"sources":["../../../../../src/services/file-storages/pinata/pinata-service.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport type { Blob } from 'buffer';\nimport { dictionary } from '../../../utils/constants/dictionary';\nimport { v4 } from 'uuid';\nimport axios, { type AxiosInstance } from 'axios';\nimport { FileStorageUploadUrl, FileStorageURL } from '../../upload-service';\nimport { FileStorage } from '../../../types/file-storage-service';\n\nexport class PinataService implements FileStorage {\n  private serviceUrl: FileStorageURL = 'https://api.pinata.cloud/';\n  private uploadUrl: FileStorageUploadUrl = 'pinning/pinFileToIPFS';\n  private instance: AxiosInstance;\n  public pinataJwtKey?: string;\n  public pinataApiKey?: string;\n  public pinataSecretApiKey?: string;\n\n  constructor(pinataJwtKey?: string, pinataApiKey?: string, pinataSecretApiKey?: string) {\n    this.pinataJwtKey = pinataJwtKey;\n    this.pinataApiKey = pinataApiKey;\n    this.pinataSecretApiKey = pinataSecretApiKey;\n\n    if (!(pinataJwtKey || (pinataApiKey && pinataSecretApiKey))) {\n      throw new Error(dictionary.errors.pinataError);\n    }\n\n    this.instance = axios.create({\n      baseURL: this.serviceUrl,\n    });\n  }\n\n  public async uploadFile(file: Blob): Promise<string> {\n    const formData = new FormData();\n    // @ts-expect-error Argument of type 'Blob' is assignable to parameter of type 'import(\"buffer\").Blob\n    formData.append('file', file);\n\n    formData.append(\n      'pinataMetadata',\n      JSON.stringify({\n        name: v4(),\n      })\n    );\n\n    formData.append(\n      'pinataOptions',\n      JSON.stringify({\n        metadataUriVersion: 0,\n      })\n    );\n\n    const authorization = this.pinataJwtKey\n      ? {\n          Authorization: `Bearer ${this.pinataJwtKey}`,\n        }\n      : {\n          pinata_api_key: this.pinataApiKey,\n          pinata_secret_api_key: this.pinataSecretApiKey,\n        };\n\n    const res = await this.instance.post(this.uploadUrl, formData, {\n      headers: {\n        'Content-Type': 'multipart/form-data',\n        ...authorization,\n      },\n    });\n\n    return `ipfs://${res.data.IpfsHash}`;\n  }\n}\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,UAAU,QAAQ,qCAAqC;AAChE,SAASC,EAAE,QAAQ,MAAM;AACzB,OAAOC,KAAK,MAA8B,OAAO;AAIjD,OAAO,MAAMC,aAAa,CAAwB;EACxCC,UAAU,GAAmB,2BAA2B;EACxDC,SAAS,GAAyB,uBAAuB;EAMjEC,WAAWA,CAACC,YAAqB,EAAEC,YAAqB,EAAEC,kBAA2B,EAAE;IACrF,IAAI,CAACF,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,YAAY,GAAGA,YAAY;IAChC,IAAI,CAACC,kBAAkB,GAAGA,kBAAkB;IAE5C,IAAI,EAAEF,YAAY,IAAKC,YAAY,IAAIC,kBAAmB,CAAC,EAAE;MAC3D,MAAM,IAAIC,KAAK,CAACV,UAAU,CAACW,MAAM,CAACC,WAAW,CAAC;IAChD;IAEA,IAAI,CAACC,QAAQ,GAAGX,KAAK,CAACY,MAAM,CAAC;MAC3BC,OAAO,EAAE,IAAI,CAACX;IAChB,CAAC,CAAC;EACJ;EAEA,MAAaY,UAAUA,CAACC,IAAU,EAAmB;IACnD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/B;IACAD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7BC,QAAQ,CAACE,MAAM,CACb,gBAAgB,EAChBC,IAAI,CAACC,SAAS,CAAC;MACbC,IAAI,EAAEtB,EAAE,CAAC;IACX,CAAC,CACH,CAAC;IAEDiB,QAAQ,CAACE,MAAM,CACb,eAAe,EACfC,IAAI,CAACC,SAAS,CAAC;MACbE,kBAAkB,EAAE;IACtB,CAAC,CACH,CAAC;IAED,MAAMC,aAAa,GAAG,IAAI,CAAClB,YAAY,GACnC;MACEmB,aAAa,EAAG,UAAS,IAAI,CAACnB,YAAa;IAC7C,CAAC,GACD;MACEoB,cAAc,EAAE,IAAI,CAACnB,YAAY;MACjCoB,qBAAqB,EAAE,IAAI,CAACnB;IAC9B,CAAC;IAEL,MAAMoB,GAAG,GAAG,MAAM,IAAI,CAAChB,QAAQ,CAACiB,IAAI,CAAC,IAAI,CAACzB,SAAS,EAAEa,QAAQ,EAAE;MAC7Da,OAAO,EAAE;QACP,cAAc,EAAE,qBAAqB;QACrC,GAAGN;MACL;IACF,CAAC,CAAC;IAEF,OAAQ,UAASI,GAAG,CAACG,IAAI,CAACC,QAAS,EAAC;EACtC;AACF","ignoreList":[]}