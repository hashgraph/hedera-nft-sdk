{"version":3,"file":"upload-service.js","names":["fs","filter","isNull","map","dictionary","errorToMessage","nonEmptyFiles","file","Blob","size","isFileEmpty","UploadService","constructor","service","uploadFilesFromPath","paths","result","Promise","all","path","isDirectory","lstatSync","files","readdirSync","length","Error","errors","uploadService","noFiles","existsSync","fileContent","readFileSync","blob","url","uploadFile","content","e","flat","uploadBlobFiles","fileToUpload","filePath","errorMessage","handleBlobUpload","metadata","noMetadata","JSON","stringify","type","uploadMetadataList","metadatas","metadataUris","metadataUri"],"sources":["../../../src/services/upload-service.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport fs from 'fs';\nimport filter from 'lodash/filter';\nimport isNull from 'lodash/isNull';\nimport map from 'lodash/map';\nimport { BufferFile } from '../types/buffer-file';\nimport { dictionary } from '../utils/constants/dictionary';\nimport { errorToMessage } from '../helpers/error-to-message';\nimport { NFTMetadata } from '../types/nft-metadata';\nimport { FileStorage } from '../types/file-storage-service';\n\nexport type FileStorageURL = `https://${string}/`;\nexport type FileStorageUploadUrl = string;\ntype UploadServiceReturn = {\n  content: Blob | BufferFile;\n  url: string;\n};\n\nconst nonEmptyFiles = (file: Blob | BufferFile): boolean => {\n  return file instanceof Blob ? file.size > 0 : !file.isFileEmpty;\n};\n\nexport class UploadService {\n  private service: FileStorage;\n\n  constructor(service: FileStorage) {\n    this.service = service;\n  }\n\n  public async uploadFilesFromPath(paths: string[]): Promise<UploadServiceReturn[]> {\n    const result = await Promise.all(\n      paths.map(async (path) => {\n        const isDirectory = fs.lstatSync(path).isDirectory();\n        let files: string[] = [];\n\n        if (isDirectory) {\n          files = fs.readdirSync(path).map((file) => `${path}/${file}`);\n        } else {\n          files = [path];\n        }\n\n        if (files.length < 0) {\n          throw new Error(dictionary.errors.uploadService.noFiles);\n        }\n\n        try {\n          return await Promise.all(\n            map(\n              filter(files, (file) => fs.existsSync(file)),\n              async (file) => {\n                const fileContent = fs.readFileSync(file);\n                const blob = new Blob([fileContent]);\n                // @ts-expect-error Argument of type 'Blob' is assignable to parameter of type 'import(\"buffer\").Blob\n                const url = await this.service.uploadFile(blob);\n\n                return {\n                  content: blob,\n                  url,\n                };\n              }\n            )\n          );\n        } catch (e) {\n          throw new Error(errorToMessage(e));\n        }\n      })\n    );\n\n    return result.flat();\n  }\n\n  public async uploadBlobFiles(files: (Blob | BufferFile)[]): Promise<UploadServiceReturn[]> {\n    if (files.length < 0) {\n      throw new Error(dictionary.errors.uploadService.noFiles);\n    }\n\n    try {\n      return await Promise.all(\n        map(filter(files, nonEmptyFiles), async (file) => {\n          let fileToUpload: Blob | null = null;\n\n          if (file instanceof Blob) {\n            fileToUpload = file;\n          } else {\n            const fileContent = fs.readFileSync(file.filePath);\n\n            fileToUpload = new Blob([fileContent]);\n          }\n\n          // @ts-expect-error Argument of type 'Blob' is assignable to parameter of type 'import(\"buffer\").Blob\n          const url = await this.service.uploadFile(fileToUpload);\n\n          return {\n            content: file,\n            url,\n          };\n        })\n      );\n    } catch (e) {\n      const errorMessage = errorToMessage(e);\n\n      throw new Error(errorMessage);\n    }\n  }\n\n  public async handleBlobUpload(metadata: Partial<NFTMetadata> | NFTMetadata): Promise<UploadServiceReturn | null> {\n    if (!metadata) {\n      throw new Error(dictionary.errors.uploadService.noMetadata);\n    }\n\n    try {\n      const file = new Blob([JSON.stringify(metadata)], { type: 'application/json' });\n      // @ts-expect-error Argument of type 'Blob' is assignable to parameter of type 'import(\"buffer\").Blob\n      const url = await this.service.uploadFile(file);\n\n      return {\n        content: file,\n        url,\n      };\n    } catch (e) {\n      const errorMessage = errorToMessage(e);\n\n      throw new Error(errorMessage);\n    }\n  }\n\n  public async uploadMetadataList(metadatas: NFTMetadata[]): Promise<UploadServiceReturn[]> {\n    const metadataUris = await Promise.all(map(metadatas, async (metadata) => this.handleBlobUpload(metadata)));\n\n    return filter(metadataUris, (metadataUri): metadataUri is UploadServiceReturn => !isNull(metadataUri));\n  }\n}\n"],"mappings":"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","ignoreList":[]}