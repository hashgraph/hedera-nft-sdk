{"version":3,"file":"index.js","names":["formatISO","fromUnixTime","dictionary","getSingleNFTDetails","getLastOwnershipTransferForNft","getHolderAndDuration","tokenId","serialNumber","network","nftDetailsData","deleted","Error","errors","nftDeleted","transactionsData","nftNoTransactions","date","Number","consensus_timestamp","readableDate","holder","receiver_account_id","holderSince"],"sources":["../../../src/get-holder-and-duration/index.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2023 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { formatISO, fromUnixTime } from 'date-fns';\nimport { dictionary } from '../utils/constants/dictionary';\nimport { getSingleNFTDetails, getLastOwnershipTransferForNft } from '../api/mirror-node';\nimport { NetworkName } from '@hashgraph/sdk/lib/client/Client';\n\nexport const getHolderAndDuration = async ({\n  tokenId,\n  serialNumber,\n  network,\n}: {\n  tokenId: string;\n  serialNumber: number;\n  network: NetworkName;\n}) => {\n  const nftDetailsData = await getSingleNFTDetails(network, tokenId, serialNumber);\n\n  if (nftDetailsData.deleted) {\n    throw new Error(dictionary.errors.nftDeleted);\n  }\n\n  const transactionsData = await getLastOwnershipTransferForNft(network, tokenId, serialNumber);\n\n  if (!transactionsData) {\n    throw new Error(dictionary.errors.nftNoTransactions);\n  }\n\n  const date = fromUnixTime(Number(transactionsData.consensus_timestamp));\n  const readableDate = formatISO(date);\n\n  return {\n    holder: transactionsData.receiver_account_id,\n    holderSince: readableDate,\n  };\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,SAAS,EAAEC,YAAY,QAAQ,UAAU;AAClD,SAASC,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,mBAAmB,EAAEC,8BAA8B,QAAQ,oBAAoB;AAGxF,OAAO,MAAMC,oBAAoB,GAAG,MAAAA,CAAO;EACzCC,OAAO;EACPC,YAAY;EACZC;AAKF,CAAC,KAAK;EACJ,MAAMC,cAAc,GAAG,MAAMN,mBAAmB,CAACK,OAAO,EAAEF,OAAO,EAAEC,YAAY,CAAC;EAEhF,IAAIE,cAAc,CAACC,OAAO,EAAE;IAC1B,MAAM,IAAIC,KAAK,CAACT,UAAU,CAACU,MAAM,CAACC,UAAU,CAAC;EAC/C;EAEA,MAAMC,gBAAgB,GAAG,MAAMV,8BAA8B,CAACI,OAAO,EAAEF,OAAO,EAAEC,YAAY,CAAC;EAE7F,IAAI,CAACO,gBAAgB,EAAE;IACrB,MAAM,IAAIH,KAAK,CAACT,UAAU,CAACU,MAAM,CAACG,iBAAiB,CAAC;EACtD;EAEA,MAAMC,IAAI,GAAGf,YAAY,CAACgB,MAAM,CAACH,gBAAgB,CAACI,mBAAmB,CAAC,CAAC;EACvE,MAAMC,YAAY,GAAGnB,SAAS,CAACgB,IAAI,CAAC;EAEpC,OAAO;IACLI,MAAM,EAAEN,gBAAgB,CAACO,mBAAmB;IAC5CC,WAAW,EAAEH;EACf,CAAC;AACH,CAAC","ignoreList":[]}