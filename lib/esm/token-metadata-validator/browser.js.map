{"version":3,"file":"browser.js","names":["Hip412MetadataSchema","validateObjectWithSchema","validationMetadataErrorOptions","errorToMessage","getMetadataObjectsForValidation","getSingleNFTDetails","uriDecoder","ValidationError","getNftMetadataFromCollection","TokenMetadataValidator","validateSingleMetadataObject","object","errors","err","push","isValid","length","validateArrayOfObjects","metadataObjects","results","allObjectsValid","forEach","metadataObject","index","e","errorMessage","errorsCount","map","error","validateLocalFile","_","Error","validateLocalDirectory","validateOnChainArrayOfObjects","obj","serialNumber","message","metadata","validateMetadataFromOnChainCollection","network","tokenId","ipfsGateway","limit","validateSingleOnChainNFTMetadata","nft","decodedNFTMetadataURL","general","missingAttributes"],"sources":["../../../src/token-metadata-validator/browser.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { NetworkName } from '@hashgraph/sdk/lib/client/Client';\nimport { Hip412MetadataSchema } from '../utils/validation-schemas/hip412-metadata-schema';\nimport { validateObjectWithSchema, validationMetadataErrorOptions } from '../helpers/validate-object-with-schema';\nimport { errorToMessage } from '../helpers/error-to-message';\nimport { MetadataObject } from '../types/csv';\nimport { getMetadataObjectsForValidation, getSingleNFTDetails, MetadataFromMirrorNode } from '../api/mirror-node';\nimport { uriDecoder } from '../helpers/uri-decoder';\nimport { ValidationError } from '../utils/validation-error';\nimport { getNftMetadataFromCollection } from '../helpers/get-nft-metadatas-from-collection';\nimport { NFTMetadata } from '../types/nft-metadata';\nimport {\n  FileValidationResult,\n  DetailedFileValidationResult,\n  ValidateArrayOfObjectsResult,\n  DirectoryValidationResult,\n} from '../types/hip412-validator';\n\nexport class TokenMetadataValidator {\n  static validateSingleMetadataObject(object: MetadataObject | NFTMetadata): FileValidationResult {\n    const errors: string[] = [];\n\n    try {\n      validateObjectWithSchema(Hip412MetadataSchema, object, validationMetadataErrorOptions);\n    } catch (err) {\n      if (err instanceof ValidationError) {\n        errors.push(...err.errors);\n      } else {\n        errors.push(errorToMessage(err));\n      }\n    }\n\n    return {\n      isValid: errors.length === 0,\n      errors,\n    };\n  }\n\n  static validateArrayOfObjects(metadataObjects: MetadataObject[]): ValidateArrayOfObjectsResult {\n    const results: { [index: number]: DetailedFileValidationResult } = {};\n    let allObjectsValid = true;\n\n    metadataObjects.forEach((metadataObject, index) => {\n      const errors: string[] = [];\n      try {\n        validateObjectWithSchema(Hip412MetadataSchema, metadataObject, validationMetadataErrorOptions);\n      } catch (e) {\n        allObjectsValid = false;\n        const errorMessage = errorToMessage(e);\n        if (e instanceof ValidationError) {\n          errors.push(...e.errors);\n        } else {\n          errors.push(errorMessage);\n        }\n      }\n      results[index] = {\n        isValid: errors.length === 0,\n        errorsCount: errors.length,\n        errors: errors.map((error) => error),\n      };\n    });\n\n    return {\n      allObjectsValid,\n      results,\n    };\n  }\n\n  static validateLocalFile(_: string): FileValidationResult {\n    throw new Error(\"No available in browser\")\n  }\n\n  static validateLocalDirectory(_: string): DirectoryValidationResult {\n    throw new Error('No available in browser');\n  }\n\n  static validateOnChainArrayOfObjects = (\n    metadataObjects: Awaited<MetadataFromMirrorNode>[]\n  ): { isValid: boolean; errors: Array<{ serialNumber: number; message: string[] }> } => {\n    const errors: Array<{ serialNumber: number; message: string[] }> = [];\n\n    metadataObjects.forEach((obj) => {\n      if (obj.error) {\n        errors.push({\n          serialNumber: obj.serialNumber,\n          message: [obj.error],\n        });\n      } else if (obj.metadata) {\n        try {\n          validateObjectWithSchema(Hip412MetadataSchema, obj.metadata, validationMetadataErrorOptions);\n        } catch (e) {\n          errors.push({\n            serialNumber: obj.serialNumber,\n            message: [errorToMessage(e)],\n          });\n        }\n      }\n    });\n\n    return { isValid: errors.length === 0, errors };\n  };\n\n  static async validateMetadataFromOnChainCollection(network: NetworkName, tokenId: string, ipfsGateway?: string, limit: number = 100) {\n    const metadataObjects = await getNftMetadataFromCollection(network, tokenId, limit, ipfsGateway);\n\n    return TokenMetadataValidator.validateOnChainArrayOfObjects(metadataObjects);\n  }\n\n  static async validateSingleOnChainNFTMetadata(network: NetworkName, tokenId: string, serialNumber: number, ipfsGateway?: string) {\n    const nft = await getSingleNFTDetails(network, tokenId, serialNumber);\n    const decodedNFTMetadataURL = uriDecoder(nft, ipfsGateway);\n\n    const metadataObject = await getMetadataObjectsForValidation(decodedNFTMetadataURL[0].metadata, decodedNFTMetadataURL[0].serialNumber);\n\n    if (!metadataObject.metadata) {\n      return {\n        isValid: false,\n        errors: {\n          general: [metadataObject.error],\n          missingAttributes: [],\n        },\n      };\n    }\n    return TokenMetadataValidator.validateSingleMetadataObject(metadataObject.metadata);\n  }\n}\n"],"mappings":"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","ignoreList":[]}