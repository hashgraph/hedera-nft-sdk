{"version":3,"file":"hip412-metadata-schema.js","names":["isImageFile","isString","z","dictionary","KNOWN_IMAGE_MIME_TYPES","AttributeSchema","object","trait_type","string","display_type","optional","value","union","min","number","boolean","max_value","LocalizationSchema","uri","default","locales","array","FileSchema","type","refine","some","knownType","startsWith","message","validation","unsupportedImageMimeType","metadata","recursiveSchema","checksum","is_default_file","metadata_uri","Hip412MetadataCommonSchema","name","description","creator","creatorDID","files","format","properties","record","unknown","attributes","localization","imageForHip412MetadataSchema","custom","superRefine","ctx","length","addIssue","fatal","code","ZodIssueCode","imageForNftNotFound","filePath","mimeType","mediaFileNotSupported","lazy","Hip412MetadataSchema","image"],"sources":["../../../../src/utils/validation-schemas/hip412-metadata-schema.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { isImageFile } from '../../helpers/is-image-file';\nimport type { BufferFile } from '../../types/buffer-file';\nimport isString from 'lodash/isString';\nimport { type ZodTypeAny, z } from 'zod';\nimport { dictionary } from '../constants/dictionary';\nimport { KNOWN_IMAGE_MIME_TYPES } from '../constants/mime-types-and-extensions';\n\nconst AttributeSchema = z.object({\n  trait_type: z.string(),\n  display_type: z.string().optional(),\n  value: z.union([z.string().min(1), z.number(), z.boolean()]),\n  max_value: z.union([z.string(), z.number()]).optional(),\n});\n\nconst LocalizationSchema = z.object({\n  uri: z.string(),\n  default: z.string(),\n  locales: z.array(z.string()),\n});\n\nconst FileSchema = z.object({\n  uri: z.string(),\n  type: z.string().refine((value) => KNOWN_IMAGE_MIME_TYPES.some((knownType) => value.startsWith(knownType)), {\n    message: dictionary.validation.unsupportedImageMimeType,\n  }),\n  metadata: recursiveSchema().optional(),\n  checksum: z.string().optional(),\n  is_default_file: z.boolean().optional(),\n  metadata_uri: z.string().optional(),\n});\n\nexport const Hip412MetadataCommonSchema = {\n  name: z.string().min(1),\n  description: z.string().optional(),\n  creator: z.string().optional(),\n  creatorDID: z.string().optional(),\n  checksum: z.string().optional(),\n  type: z.string().refine((value) => KNOWN_IMAGE_MIME_TYPES.some((knownType) => value.startsWith(knownType)), {\n    message: dictionary.validation.unsupportedImageMimeType,\n  }),\n  files: z.array(FileSchema).optional(),\n  format: z.optional(z.string()),\n  properties: z.record(z.unknown()).optional(),\n  attributes: z.array(AttributeSchema).optional(),\n  localization: LocalizationSchema.optional(),\n};\n\nexport const imageForHip412MetadataSchema = z.custom<string | BufferFile | undefined>().superRefine((value, ctx) => {\n  if (!value || (isString(value) && !value.length)) {\n    ctx.addIssue({\n      fatal: true,\n      code: z.ZodIssueCode.custom,\n      message: dictionary.validation.imageForNftNotFound,\n    });\n    return false;\n  }\n\n  if (!isString(value) && value.filePath && !isImageFile(value.name, value.mimeType)) {\n    ctx.addIssue({\n      fatal: true,\n      code: z.ZodIssueCode.custom,\n      message: dictionary.validation.mediaFileNotSupported,\n    });\n    return false;\n  }\n\n  return true;\n});\n\nfunction recursiveSchema(): ZodTypeAny {\n  return z.lazy(() => z.object(Hip412MetadataCommonSchema));\n}\n\nexport const Hip412MetadataSchema = z.object({\n  ...Hip412MetadataCommonSchema,\n  image: imageForHip412MetadataSchema,\n});\n"],"mappings":"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","ignoreList":[]}