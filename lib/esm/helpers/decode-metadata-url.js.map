{"version":3,"file":"decode-metadata-url.js","names":["dictionary","errorToMessage","decodeMetadataUrl","encodedMetadata","ipfsGateway","decodedUrl","atob","error","Error","startsWith","errors","ipfsGatewayRequired","replace"],"sources":["../../../src/helpers/decode-metadata-url.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { dictionary } from '../utils/constants/dictionary';\nimport { errorToMessage } from './error-to-message';\n\nexport const decodeMetadataUrl = (encodedMetadata: string, ipfsGateway?: string): string => {\n  let decodedUrl = '';\n  try {\n    decodedUrl = atob(encodedMetadata);\n  } catch (error) {\n    throw new Error(errorToMessage(error));\n  }\n\n  if (!decodedUrl.startsWith('https://') && !decodedUrl.startsWith('http://') && !ipfsGateway) {\n    throw new Error(dictionary.errors.ipfsGatewayRequired);\n  }\n\n  if (decodedUrl.startsWith('ipfs://') && ipfsGateway) {\n    decodedUrl = decodedUrl.replace('ipfs://', ipfsGateway);\n  } else if (!decodedUrl.startsWith('https://') && !decodedUrl.startsWith('http://') && ipfsGateway) {\n    decodedUrl = `${ipfsGateway}${decodedUrl}`;\n  }\n\n  return decodedUrl;\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,UAAU,QAAQ,+BAA+B;AAC1D,SAASC,cAAc,QAAQ,oBAAoB;AAEnD,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,eAAuB,EAAEC,WAAoB,KAAa;EAC1F,IAAIC,UAAU,GAAG,EAAE;EACnB,IAAI;IACFA,UAAU,GAAGC,IAAI,CAACH,eAAe,CAAC;EACpC,CAAC,CAAC,OAAOI,KAAK,EAAE;IACd,MAAM,IAAIC,KAAK,CAACP,cAAc,CAACM,KAAK,CAAC,CAAC;EACxC;EAEA,IAAI,CAACF,UAAU,CAACI,UAAU,CAAC,UAAU,CAAC,IAAI,CAACJ,UAAU,CAACI,UAAU,CAAC,SAAS,CAAC,IAAI,CAACL,WAAW,EAAE;IAC3F,MAAM,IAAII,KAAK,CAACR,UAAU,CAACU,MAAM,CAACC,mBAAmB,CAAC;EACxD;EAEA,IAAIN,UAAU,CAACI,UAAU,CAAC,SAAS,CAAC,IAAIL,WAAW,EAAE;IACnDC,UAAU,GAAGA,UAAU,CAACO,OAAO,CAAC,SAAS,EAAER,WAAW,CAAC;EACzD,CAAC,MAAM,IAAI,CAACC,UAAU,CAACI,UAAU,CAAC,UAAU,CAAC,IAAI,CAACJ,UAAU,CAACI,UAAU,CAAC,SAAS,CAAC,IAAIL,WAAW,EAAE;IACjGC,UAAU,GAAI,GAAED,WAAY,GAAEC,UAAW,EAAC;EAC5C;EAEA,OAAOA,UAAU;AACnB,CAAC","ignoreList":[]}