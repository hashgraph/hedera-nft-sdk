{"version":3,"file":"create-collection-e2e.test.js","names":["Long","PrivateKey","nftSDK","secondAccountId","secondPrivateKey","LONG_E2E_TIMEOUT","MIRROR_NODE_DELAY","getTokenInfo","add","milliseconds","millisecondsToSeconds","describe","it","tokenId","createCollection","collectionName","collectionSymbol","expect","toBeDefined","adminKey","generateED25519","keys","admin","tokenInfo","client","toString","toEqual","publicKey","toStringDer","treasuryAccountPrivateKey","treasuryAccount","treasuryAccountId","expirationTime","Date","days","toDate","setMilliseconds","failing","expectedAutoRenewPeriod","autoRenewPeriod","autoRenewAccount","autoRenewAccountPrivateKey","autoRenewAccountId","seconds","expectedMemo","memo","tokenMemo","maxSupply","toNumber","kycKey","freezeKey","wipeKey","supplyKey","feeScheduleKey","pauseKey","KYC","freeze","wipe","supply","feeSchedule","pause"],"sources":["../../../../../src/test/e2e/create-collection/create-collection-e2e.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Long, PrivateKey } from '@hashgraph/sdk';\nimport { nftSDK, secondAccountId, secondPrivateKey } from '../e2e-consts';\nimport { LONG_E2E_TIMEOUT, MIRROR_NODE_DELAY } from '../../__mocks__/consts';\nimport { getTokenInfo } from '../../../utils/hedera/get-token-info';\nimport { add, milliseconds, millisecondsToSeconds } from 'date-fns';\n\ndescribe('createCollectionFunction e2e', () => {\n  it(\n    'creates a collection',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n      });\n\n      expect(tokenId).toBeDefined();\n    },\n    MIRROR_NODE_DELAY\n  );\n\n  it(\n    'creates a collection with Admin Key',\n    async () => {\n      const adminKey = PrivateKey.generateED25519();\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_admin',\n        collectionSymbol: 'test_symbol_admin',\n        keys: {\n          admin: adminKey,\n        },\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n\n      expect(tokenId).toBeDefined();\n      expect(tokenInfo.adminKey?.toString()).toEqual(adminKey.publicKey.toStringDer());\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with different treasury account',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_treasury',\n        collectionSymbol: 'test_symbol_treasury',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n\n      expect(tokenId).toBeDefined();\n      expect(tokenInfo.treasuryAccountId?.toString()).toEqual(secondAccountId);\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with expiration time',\n    async () => {\n      const expirationTime = add(new Date(), { days: 1 });\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_expiration_time',\n        collectionSymbol: 'TNET',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        expirationTime: expirationTime,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.expirationTime).toBeDefined();\n      expect(tokenInfo.expirationTime?.toDate()).toEqual(new Date(expirationTime.setMilliseconds(0)));\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  //This test is failing because of the issue in the Hedera SDK. When the issue is resolved, this test should be enabled (remove .failing).\n  it.failing(\n    'creates a collection with auto renew account and period',\n    async () => {\n      const expectedAutoRenewPeriod = millisecondsToSeconds(milliseconds({ days: 30 }));\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_auto_renew_account_and_period',\n        collectionSymbol: 'TNATRAAP',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        autoRenewPeriod: expectedAutoRenewPeriod,\n        autoRenewAccount: secondAccountId,\n        autoRenewAccountPrivateKey: secondPrivateKey,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.autoRenewAccountId).toBeDefined();\n      expect(tokenInfo.autoRenewAccountId?.toString()).toEqual(secondAccountId);\n      expect(tokenInfo.autoRenewPeriod).toBeDefined();\n      expect(tokenInfo.autoRenewPeriod?.seconds).toEqual(new Long(expectedAutoRenewPeriod, 0));\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with auto renew period',\n    async () => {\n      const expectedAutoRenewPeriod = millisecondsToSeconds(milliseconds({ days: 30 }));\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_auto_renew_period',\n        collectionSymbol: 'TNARP',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        autoRenewPeriod: expectedAutoRenewPeriod,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.autoRenewPeriod).toBeDefined();\n      expect(tokenInfo.autoRenewPeriod?.seconds).toEqual(new Long(expectedAutoRenewPeriod, 0));\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with memo',\n    async () => {\n      const expectedMemo = 'test_memo';\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_memo',\n        collectionSymbol: 'TNM',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        memo: expectedMemo,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.tokenMemo).toBeDefined();\n      expect(tokenInfo.tokenMemo).toEqual(expectedMemo);\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with a specified maxSupply',\n    async () => {\n      const maxSupply = 10;\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_max_supply',\n        collectionSymbol: 'TMAXSUP',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        maxSupply,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.maxSupply).toBeDefined();\n      expect(tokenInfo.maxSupply.toNumber()).toEqual(maxSupply);\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with all types of keys',\n    async () => {\n      const adminKey = PrivateKey.generateED25519();\n      const kycKey = PrivateKey.generateED25519();\n      const freezeKey = PrivateKey.generateED25519();\n      const wipeKey = PrivateKey.generateED25519();\n      const supplyKey = PrivateKey.generateED25519();\n      const feeScheduleKey = PrivateKey.generateED25519();\n      const pauseKey = PrivateKey.generateED25519();\n\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_all_keys',\n        collectionSymbol: 'TNALLKEYS',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        keys: {\n          admin: adminKey,\n          KYC: kycKey,\n          freeze: freezeKey,\n          wipe: wipeKey,\n          supply: supplyKey,\n          feeSchedule: feeScheduleKey,\n          pause: pauseKey,\n        },\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.adminKey?.toString()).toEqual(adminKey.publicKey.toStringDer());\n      expect(tokenInfo.kycKey?.toString()).toEqual(kycKey.publicKey.toStringDer());\n      expect(tokenInfo.freezeKey?.toString()).toEqual(freezeKey.publicKey.toStringDer());\n      expect(tokenInfo.wipeKey?.toString()).toEqual(wipeKey.publicKey.toStringDer());\n      expect(tokenInfo.supplyKey?.toString()).toEqual(supplyKey.publicKey.toStringDer());\n      expect(tokenInfo.feeScheduleKey?.toString()).toEqual(feeScheduleKey.publicKey.toStringDer());\n      expect(tokenInfo.pauseKey?.toString()).toEqual(pauseKey.publicKey.toStringDer());\n    },\n    LONG_E2E_TIMEOUT\n  );\n});\n"],"mappings":"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","ignoreList":[]}