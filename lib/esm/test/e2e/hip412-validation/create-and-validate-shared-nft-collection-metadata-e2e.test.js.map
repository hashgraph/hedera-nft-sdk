{"version":3,"file":"create-and-validate-shared-nft-collection-metadata-e2e.test.js","names":["TokenMetadataValidator","nftSDK","operatorPrivateKey","NETWORK","IPFS_GATEWAY","LINK_TO_JSON_OBJECT_WITHOUT_ERRORS","AMOUNT_OF_NFTS_TO_MINT","BATCH_SIZE","LONG_E2E_TIMEOUT","MIRROR_NODE_DELAY","describe","tokenId","beforeAll","createCollection","collectionName","collectionSymbol","mintSharedMetadata","amount","batchSize","metaData","supplyKey","Promise","resolve","setTimeout","it","validationResponse","validateMetadataFromOnChainCollection","expect","isValid","toBe","errors","toHaveLength"],"sources":["../../../../../src/test/e2e/hip412-validation/create-and-validate-shared-nft-collection-metadata-e2e.test.ts"],"sourcesContent":["import { TokenMetadataValidator } from '../../../token-metadata-validator';\nimport {\n  nftSDK,\n  operatorPrivateKey,\n  NETWORK,\n  IPFS_GATEWAY,\n  LINK_TO_JSON_OBJECT_WITHOUT_ERRORS,\n  AMOUNT_OF_NFTS_TO_MINT,\n  BATCH_SIZE,\n} from '../e2e-consts';\nimport { LONG_E2E_TIMEOUT, MIRROR_NODE_DELAY } from '../../__mocks__/consts';\n\ndescribe('E2E test for validating shared NFT Collection Metadata Against HIP412 schema', () => {\n  let tokenId: string;\n\n  beforeAll(async () => {\n    tokenId = await nftSDK.createCollection({\n      collectionName: 'valid_test_collection',\n      collectionSymbol: 'VTC',\n    });\n\n    await nftSDK.mintSharedMetadata({\n      tokenId,\n      amount: AMOUNT_OF_NFTS_TO_MINT,\n      batchSize: BATCH_SIZE,\n      metaData: LINK_TO_JSON_OBJECT_WITHOUT_ERRORS,\n      supplyKey: operatorPrivateKey,\n    });\n\n    await new Promise((resolve) => setTimeout(resolve, MIRROR_NODE_DELAY));\n  }, LONG_E2E_TIMEOUT);\n\n  it(\n    'should successfully validate the previously created NFT collection metadata against the HIP412 schema',\n    async () => {\n      const validationResponse = await TokenMetadataValidator.validateMetadataFromOnChainCollection(NETWORK, tokenId, IPFS_GATEWAY);\n\n      expect(validationResponse.isValid).toBe(true);\n      expect(validationResponse.errors).toHaveLength(0);\n    },\n    LONG_E2E_TIMEOUT\n  );\n});\n"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,mCAAmC;AAC1E,SACEC,MAAM,EACNC,kBAAkB,EAClBC,OAAO,EACPC,YAAY,EACZC,kCAAkC,EAClCC,sBAAsB,EACtBC,UAAU,QACL,eAAe;AACtB,SAASC,gBAAgB,EAAEC,iBAAiB,QAAQ,wBAAwB;AAE5EC,QAAQ,CAAC,8EAA8E,EAAE,MAAM;EAC7F,IAAIC,OAAe;EAEnBC,SAAS,CAAC,YAAY;IACpBD,OAAO,GAAG,MAAMV,MAAM,CAACY,gBAAgB,CAAC;MACtCC,cAAc,EAAE,uBAAuB;MACvCC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IAEF,MAAMd,MAAM,CAACe,kBAAkB,CAAC;MAC9BL,OAAO;MACPM,MAAM,EAAEX,sBAAsB;MAC9BY,SAAS,EAAEX,UAAU;MACrBY,QAAQ,EAAEd,kCAAkC;MAC5Ce,SAAS,EAAElB;IACb,CAAC,CAAC;IAEF,MAAM,IAAImB,OAAO,CAAEC,OAAO,IAAKC,UAAU,CAACD,OAAO,EAAEb,iBAAiB,CAAC,CAAC;EACxE,CAAC,EAAED,gBAAgB,CAAC;EAEpBgB,EAAE,CACA,uGAAuG,EACvG,YAAY;IACV,MAAMC,kBAAkB,GAAG,MAAMzB,sBAAsB,CAAC0B,qCAAqC,CAACvB,OAAO,EAAEQ,OAAO,EAAEP,YAAY,CAAC;IAE7HuB,MAAM,CAACF,kBAAkB,CAACG,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC7CF,MAAM,CAACF,kBAAkB,CAACK,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;EACnD,CAAC,EACDvB,gBACF,CAAC;AACH,CAAC,CAAC","ignoreList":[]}