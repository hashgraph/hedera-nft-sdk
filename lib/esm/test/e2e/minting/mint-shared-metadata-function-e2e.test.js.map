{"version":3,"file":"mint-shared-metadata-function-e2e.test.js","names":["NftId","TokenId","TokenNftInfoQuery","nftSDK","operatorPrivateKey","LONG_E2E_TIMEOUT","describe","testCases","amount","forEach","it","tokenId","createCollection","collectionName","collectionSymbol","mintedMetadata","mintSharedMetadata","batchSize","metaData","supplyKey","expect","toBeDefined","toHaveLength","toEqual","arrayContaining","Array","fill","content","serialNumber","any","Number","nftInfos","setNftId","fromString","execute","client","metadata","toString"],"sources":["../../../../../src/test/e2e/minting/mint-shared-metadata-function-e2e.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { NftId, TokenId, TokenNftInfoQuery } from '@hashgraph/sdk';\nimport { nftSDK, operatorPrivateKey } from '../e2e-consts';\nimport { LONG_E2E_TIMEOUT } from '../../__mocks__/consts';\n\ndescribe('mintSharedMetadata function e2e', () => {\n  const testCases = [{ amount: 1 }, { amount: 3 }, { amount: 10 }];\n\n  testCases.forEach(({ amount }) => {\n    it(\n      'Creating a token and minting ${amount} NFTs into it',\n      async () => {\n        const tokenId = await nftSDK.createCollection({\n          collectionName: 'test_name',\n          collectionSymbol: 'test_symbol',\n        });\n        const mintedMetadata = await nftSDK.mintSharedMetadata({\n          tokenId,\n          amount,\n          batchSize: 2,\n          metaData: 'www.youtube.com',\n          supplyKey: operatorPrivateKey,\n        });\n\n        expect(tokenId).toBeDefined();\n        expect(mintedMetadata).toBeDefined();\n        expect(mintedMetadata).toHaveLength(amount);\n        expect(mintedMetadata).toEqual(\n          expect.arrayContaining(\n            Array(amount).fill({\n              content: 'www.youtube.com',\n              serialNumber: expect.any(Number),\n            })\n          )\n        );\n\n        for (const metaData of mintedMetadata) {\n          const nftInfos = await new TokenNftInfoQuery()\n            .setNftId(new NftId(TokenId.fromString(tokenId), metaData.serialNumber))\n            .execute(nftSDK.client);\n\n          expect(nftInfos[0].metadata!.toString()).toEqual('www.youtube.com');\n        }\n      },\n      LONG_E2E_TIMEOUT\n    );\n  });\n\n  it(\n    'Creating a token and minting 1 NFTs into it with default supplyKey',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n      });\n      const mintedMetadata = await nftSDK.mintSharedMetadata({\n        tokenId,\n        amount: 1,\n        batchSize: 2,\n        metaData: 'www.youtube.com',\n      });\n\n      expect(tokenId).toBeDefined();\n      expect(mintedMetadata).toBeDefined();\n      expect(mintedMetadata).toHaveLength(1);\n      expect(mintedMetadata).toEqual(\n        expect.arrayContaining(\n          Array(1).fill({\n            content: 'www.youtube.com',\n            serialNumber: expect.any(Number),\n          })\n        )\n      );\n\n      for (const metaData of mintedMetadata) {\n        const nftInfos = await new TokenNftInfoQuery()\n          .setNftId(new NftId(TokenId.fromString(tokenId), metaData.serialNumber))\n          .execute(nftSDK.client);\n\n        expect(nftInfos[0].metadata!.toString()).toEqual('www.youtube.com');\n      }\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'Creating a token and minting 8 NFTs into it with batchSize 5',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n      });\n      const mintedMetadata = await nftSDK.mintSharedMetadata({\n        tokenId,\n        amount: 1,\n        batchSize: 5,\n        metaData: 'www.youtube.com',\n      });\n\n      expect(tokenId).toBeDefined();\n      expect(mintedMetadata).toBeDefined();\n      expect(mintedMetadata).toHaveLength(1);\n      expect(mintedMetadata).toEqual(\n        expect.arrayContaining(\n          Array(1).fill({\n            content: 'www.youtube.com',\n            serialNumber: expect.any(Number),\n          })\n        )\n      );\n\n      for (const metaData of mintedMetadata) {\n        const nftInfos = await new TokenNftInfoQuery()\n          .setNftId(new NftId(TokenId.fromString(tokenId), metaData.serialNumber))\n          .execute(nftSDK.client);\n\n        expect(nftInfos[0].metadata!.toString()).toEqual('www.youtube.com');\n      }\n    },\n    LONG_E2E_TIMEOUT\n  );\n});\n"],"mappings":"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","ignoreList":[]}