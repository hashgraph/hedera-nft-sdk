{"version":3,"file":"consts.js","names":["PrivateKey","myAccountId","mySecondAccountId","myPrivateKey","generateED25519","mySecondPrivateKey","treasuryAccountPrivateKey","pathToOneLineCSV","pathToRowCSV","CSV_EXAMPLE_INVALID_HEADERS","CSV_EXAMPLE_NO_IMAGES","CSV_EXAMPLE_ONLY_REQUIRED_FIELDS","CSV_EXAMPLE_WITH_ALL_FIELDS","CSV_EXAMPLE_WITH_MISSING_REQUIRED_FIELDS","CSV_EXAMPLE_ONLY_REQUIRED_FIELDS_AND_HEADERS","CSV_EXAMPLE_EMPTY_FILE","CSV_EXAMPLE_WITH_HEADERS_ONLY","JSON_METADATA_INTEGRATION_TESTS_OUTPUT_FOLDER_PATH","JSON_METADATA_UNIT_TESTS_OUTPUT_METADATA_FOLDER_PATH","JSON_METADATA_UNIT_TESTS_OUTPUT_NEW_METADATA_FOLDER_PATH","EMPTY_JSON_DIRECTORY_PATH","NON_EMPTY_JSON_DIRECTORY_PATH","FILES_WITH_MIXED_EXTENSION_PATH","EMPTY_JSON_EXAMPLE_PATH","CORRECT_EXAMPLE_PATH","LONG_E2E_TIMEOUT","MIRROR_NODE_DELAY","LONG_MIRROR_NODE_DELAY","NFT_FROM_TOKEN_EXAMPLE_BASE_URL","NETWORK_ERROR","EXAMPLE_IPFS_GATEWAY","IPFS_PREFIXED_HASH","HASH_WITHOUT_IPFS_PREFIX","HTTPS_URL","NETWORK","MOCK_CLIENT","MOCK_META_DATA","MOCK_TOKEN_ID","MOCK_SERIAL","MOCK_SUPPLY_KEY"],"sources":["../../../../src/test/__mocks__/consts.ts"],"sourcesContent":["import { Client, PrivateKey } from '@hashgraph/sdk';\n\n/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport const myAccountId = '0.0.12345';\nexport const mySecondAccountId = '0.0.123';\nexport const myPrivateKey = PrivateKey.generateED25519();\nexport const mySecondPrivateKey = PrivateKey.generateED25519();\nexport const treasuryAccountPrivateKey = PrivateKey.generateED25519();\n\nexport const pathToOneLineCSV = 'src/test/__mocks__/csv/csv-example-one-line.csv';\nexport const pathToRowCSV = 'src/test/__mocks__/csv/csv-example-rows.csv';\nexport const CSV_EXAMPLE_INVALID_HEADERS = 'src/test/__mocks__/csv/csv-example-invalid-headers.csv';\nexport const CSV_EXAMPLE_NO_IMAGES = 'src/test/__mocks__/csv/csv-example-no-images.csv';\nexport const CSV_EXAMPLE_ONLY_REQUIRED_FIELDS = 'src/test/__mocks__/csv/csv-example-only-required-fields.csv';\nexport const CSV_EXAMPLE_WITH_ALL_FIELDS = 'src/test/__mocks__/csv/csv-example-with-all-fields.csv';\nexport const CSV_EXAMPLE_WITH_MISSING_REQUIRED_FIELDS = 'src/test/__mocks__/csv/csv-example-with-missing-required-fields.csv';\nexport const CSV_EXAMPLE_ONLY_REQUIRED_FIELDS_AND_HEADERS = 'src/test/__mocks__/csv/csv-example-only-required-fields-and-headers.csv';\nexport const CSV_EXAMPLE_EMPTY_FILE = 'src/test/__mocks__/csv/csv-example-empty-file.csv';\nexport const CSV_EXAMPLE_WITH_HEADERS_ONLY = 'src/test/__mocks__/csv/csv-example-with-headers-only.csv';\n\nexport const JSON_METADATA_INTEGRATION_TESTS_OUTPUT_FOLDER_PATH = 'src/test/integration/output';\nexport const JSON_METADATA_UNIT_TESTS_OUTPUT_METADATA_FOLDER_PATH = 'src/test/unit/output/metadata';\nexport const JSON_METADATA_UNIT_TESTS_OUTPUT_NEW_METADATA_FOLDER_PATH = 'src/test/unit/output/newMetadata';\n\nexport const EMPTY_JSON_DIRECTORY_PATH = 'src/test/__mocks__/json/empty-json-directory';\nexport const NON_EMPTY_JSON_DIRECTORY_PATH = 'src/test/__mocks__/json/non-empty-json-directory';\nexport const FILES_WITH_MIXED_EXTENSION_PATH = 'src/test/__mocks__/json/files-with-mixed-extensions';\n\nexport const EMPTY_JSON_EXAMPLE_PATH = 'src/test/__mocks__/json/empty-example.json';\nexport const CORRECT_EXAMPLE_PATH = 'src/test/__mocks__/json/correct-example.json';\n\nexport const LONG_E2E_TIMEOUT = 55000;\nexport const MIRROR_NODE_DELAY = 5000;\nexport const LONG_MIRROR_NODE_DELAY = 10000;\n\nexport const NFT_FROM_TOKEN_EXAMPLE_BASE_URL = 'http://example.com';\nexport const NETWORK_ERROR = 'Network error';\n\nexport const EXAMPLE_IPFS_GATEWAY = 'https://myipfsgateway.example.com/ipfs/';\n\nexport const IPFS_PREFIXED_HASH = 'ipfs://QmSomeHash';\nexport const HASH_WITHOUT_IPFS_PREFIX = 'QmAnotherHash';\nexport const HTTPS_URL = 'https://example.com/metadata.json';\n\nexport const NETWORK = 'testnet';\n\nexport const MOCK_CLIENT = {} as Client;\nexport const MOCK_META_DATA = 'meta1';\nexport const MOCK_TOKEN_ID = '0.0.123';\nexport const MOCK_SERIAL = 2;\nexport const MOCK_SUPPLY_KEY = myPrivateKey;\n"],"mappings":"AAAA,SAAiBA,UAAU,QAAQ,gBAAgB;;AAEnD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMC,WAAW,GAAG,WAAW;AACtC,OAAO,MAAMC,iBAAiB,GAAG,SAAS;AAC1C,OAAO,MAAMC,YAAY,GAAGH,UAAU,CAACI,eAAe,CAAC,CAAC;AACxD,OAAO,MAAMC,kBAAkB,GAAGL,UAAU,CAACI,eAAe,CAAC,CAAC;AAC9D,OAAO,MAAME,yBAAyB,GAAGN,UAAU,CAACI,eAAe,CAAC,CAAC;AAErE,OAAO,MAAMG,gBAAgB,GAAG,iDAAiD;AACjF,OAAO,MAAMC,YAAY,GAAG,6CAA6C;AACzE,OAAO,MAAMC,2BAA2B,GAAG,wDAAwD;AACnG,OAAO,MAAMC,qBAAqB,GAAG,kDAAkD;AACvF,OAAO,MAAMC,gCAAgC,GAAG,6DAA6D;AAC7G,OAAO,MAAMC,2BAA2B,GAAG,wDAAwD;AACnG,OAAO,MAAMC,wCAAwC,GAAG,qEAAqE;AAC7H,OAAO,MAAMC,4CAA4C,GAAG,yEAAyE;AACrI,OAAO,MAAMC,sBAAsB,GAAG,mDAAmD;AACzF,OAAO,MAAMC,6BAA6B,GAAG,0DAA0D;AAEvG,OAAO,MAAMC,kDAAkD,GAAG,6BAA6B;AAC/F,OAAO,MAAMC,oDAAoD,GAAG,+BAA+B;AACnG,OAAO,MAAMC,wDAAwD,GAAG,kCAAkC;AAE1G,OAAO,MAAMC,yBAAyB,GAAG,8CAA8C;AACvF,OAAO,MAAMC,6BAA6B,GAAG,kDAAkD;AAC/F,OAAO,MAAMC,+BAA+B,GAAG,qDAAqD;AAEpG,OAAO,MAAMC,uBAAuB,GAAG,4CAA4C;AACnF,OAAO,MAAMC,oBAAoB,GAAG,8CAA8C;AAElF,OAAO,MAAMC,gBAAgB,GAAG,KAAK;AACrC,OAAO,MAAMC,iBAAiB,GAAG,IAAI;AACrC,OAAO,MAAMC,sBAAsB,GAAG,KAAK;AAE3C,OAAO,MAAMC,+BAA+B,GAAG,oBAAoB;AACnE,OAAO,MAAMC,aAAa,GAAG,eAAe;AAE5C,OAAO,MAAMC,oBAAoB,GAAG,yCAAyC;AAE7E,OAAO,MAAMC,kBAAkB,GAAG,mBAAmB;AACrD,OAAO,MAAMC,wBAAwB,GAAG,eAAe;AACvD,OAAO,MAAMC,SAAS,GAAG,mCAAmC;AAE5D,OAAO,MAAMC,OAAO,GAAG,SAAS;AAEhC,OAAO,MAAMC,WAAW,GAAG,CAAC,CAAW;AACvC,OAAO,MAAMC,cAAc,GAAG,OAAO;AACrC,OAAO,MAAMC,aAAa,GAAG,SAAS;AACtC,OAAO,MAAMC,WAAW,GAAG,CAAC;AAC5B,OAAO,MAAMC,eAAe,GAAGpC,YAAY","ignoreList":[]}