{"version":3,"file":"create-royalty-fee-function.test.js","names":["myAccountId","createRoyaltyFeeFunction","describe","it","royaltyFeeType","collectorAccountId","numerator","denominator","allCollectorsAreExempt","result","expect","_numerator","toInt","toEqual","_denominator","fallbackFee","amount","denominatingTokenId","_amount"],"sources":["../../../../../src/test/unit/fees/create-royalty-fee-function.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { RoyaltyFeeType } from '../../../types/fees';\nimport { myAccountId } from '../../__mocks__/consts';\nimport { createRoyaltyFeeFunction } from '../../../nftSDKFunctions/create-royalty-fee-function';\n\ndescribe('createRoyaltyFeeFunction', () => {\n  it('should return the correct numerator and denominator', () => {\n    const royaltyFeeType: RoyaltyFeeType = {\n      collectorAccountId: myAccountId,\n      numerator: 1,\n      denominator: 2,\n      allCollectorsAreExempt: true,\n    };\n\n    const result = createRoyaltyFeeFunction(royaltyFeeType);\n\n    expect(result._numerator.toInt()).toEqual(royaltyFeeType.numerator);\n    expect(result._denominator.toInt()).toEqual(royaltyFeeType.denominator);\n  });\n\n  it('should return the correct fallbackFee when provided', () => {\n    const royaltyFeeType: RoyaltyFeeType = {\n      collectorAccountId: myAccountId,\n      numerator: 1,\n      denominator: 2,\n      fallbackFee: {\n        collectorAccountId: myAccountId,\n        amount: 100,\n        denominatingTokenId: myAccountId,\n        allCollectorsAreExempt: true,\n      },\n      allCollectorsAreExempt: true,\n    };\n\n    const result = createRoyaltyFeeFunction(royaltyFeeType);\n\n    expect(result.fallbackFee?._amount.toInt()).toEqual(royaltyFeeType.fallbackFee?.amount);\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,WAAW,QAAQ,wBAAwB;AACpD,SAASC,wBAAwB,QAAQ,sDAAsD;AAE/FC,QAAQ,CAAC,0BAA0B,EAAE,MAAM;EACzCC,EAAE,CAAC,qDAAqD,EAAE,MAAM;IAC9D,MAAMC,cAA8B,GAAG;MACrCC,kBAAkB,EAAEL,WAAW;MAC/BM,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,CAAC;MACdC,sBAAsB,EAAE;IAC1B,CAAC;IAED,MAAMC,MAAM,GAAGR,wBAAwB,CAACG,cAAc,CAAC;IAEvDM,MAAM,CAACD,MAAM,CAACE,UAAU,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACT,cAAc,CAACE,SAAS,CAAC;IACnEI,MAAM,CAACD,MAAM,CAACK,YAAY,CAACF,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACT,cAAc,CAACG,WAAW,CAAC;EACzE,CAAC,CAAC;EAEFJ,EAAE,CAAC,qDAAqD,EAAE,MAAM;IAC9D,MAAMC,cAA8B,GAAG;MACrCC,kBAAkB,EAAEL,WAAW;MAC/BM,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,CAAC;MACdQ,WAAW,EAAE;QACXV,kBAAkB,EAAEL,WAAW;QAC/BgB,MAAM,EAAE,GAAG;QACXC,mBAAmB,EAAEjB,WAAW;QAChCQ,sBAAsB,EAAE;MAC1B,CAAC;MACDA,sBAAsB,EAAE;IAC1B,CAAC;IAED,MAAMC,MAAM,GAAGR,wBAAwB,CAACG,cAAc,CAAC;IAEvDM,MAAM,CAACD,MAAM,CAACM,WAAW,EAAEG,OAAO,CAACN,KAAK,CAAC,CAAC,CAAC,CAACC,OAAO,CAACT,cAAc,CAACW,WAAW,EAAEC,MAAM,CAAC;EACzF,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}