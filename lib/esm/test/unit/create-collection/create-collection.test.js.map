{"version":3,"file":"create-collection.test.js","names":["Client","PrivateKey","createCollectionFunction","myPrivateKey","treasuryAccountPrivateKey","dictionary","jest","mock","forTestnet","fn","mockImplementation","setOperator","getOperator","mockResolvedValue","accountId","toString","mockReturnValue","_maxExecutionTime","setMaxExecutionTime","_setNetworkFromName","setMirrorNetwork","AccountId","fromString","mockReturnThis","generateED25519","fromStringED25519","fromStringECDSA","TokenCreateTransaction","setTokenName","setTokenSymbol","setTokenType","setSupplyType","setSupplyKey","setTreasuryAccountId","setAdminKey","setKycKey","setFreezeKey","setWipeKey","setFeeScheduleKey","setPauseKey","setMaxSupply","setCustomFees","freezeWith","sign","execute","getReceipt","tokenId","TokenType","NonFungibleUnique","describe","it","client","collectionName","collectionSymbol","expect","toEqual","treasuryAccount","rejects","toThrow","createCollection","treasuryAccountPrivateKeySignRequired","keys","admin","supply","collectionNameRequired","collectionSymbolRequired"],"sources":["../../../../../src/test/unit/create-collection/create-collection.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Client, PrivateKey } from '@hashgraph/sdk';\nimport { createCollectionFunction } from '../../../nftSDKFunctions/create-collection';\nimport { myPrivateKey, treasuryAccountPrivateKey } from '../../__mocks__/consts';\nimport { dictionary } from '../../../utils/constants/dictionary';\n\njest.mock('@hashgraph/sdk', () => {\n  return {\n    Client: {\n      forTestnet: jest.fn().mockImplementation(() => ({\n        setOperator: jest.fn(),\n        getOperator: jest.fn().mockResolvedValue({\n          accountId: {\n            toString: jest.fn().mockReturnValue('1.2.1234'),\n          },\n        }),\n        _maxExecutionTime: jest.fn(),\n        setMaxExecutionTime: jest.fn(),\n        _setNetworkFromName: jest.fn(),\n        setMirrorNetwork: jest.fn(),\n      })),\n    },\n    AccountId: {\n      fromString: jest.fn().mockReturnThis(),\n    },\n    PrivateKey: {\n      fromString: jest.fn().mockReturnThis(),\n      generateED25519: jest.fn().mockReturnThis(),\n      fromStringED25519: jest.fn().mockReturnThis(),\n      fromStringECDSA: jest.fn().mockReturnThis(),\n    },\n    TokenCreateTransaction: jest.fn(() => ({\n      setTokenName: jest.fn().mockReturnThis(),\n      setTokenSymbol: jest.fn().mockReturnThis(),\n      setTokenType: jest.fn().mockReturnThis(),\n      setSupplyType: jest.fn().mockReturnThis(),\n      setSupplyKey: jest.fn().mockReturnThis(),\n      setTreasuryAccountId: jest.fn().mockReturnThis(),\n      setAdminKey: jest.fn().mockReturnThis(),\n      setKycKey: jest.fn().mockReturnThis(),\n      setFreezeKey: jest.fn().mockReturnThis(),\n      setWipeKey: jest.fn().mockReturnThis(),\n      setFeeScheduleKey: jest.fn().mockReturnThis(),\n      setPauseKey: jest.fn().mockReturnThis(),\n      setMaxSupply: jest.fn().mockReturnThis(),\n      setCustomFees: jest.fn().mockReturnThis(),\n      freezeWith: jest.fn().mockReturnThis(),\n      sign: jest.fn().mockResolvedValue({\n        execute: jest.fn().mockResolvedValue({\n          getReceipt: jest.fn().mockResolvedValue({\n            tokenId: {\n              toString: jest.fn().mockReturnValue('1.2.1234'),\n            },\n          }),\n        }),\n      }),\n    })),\n    TokenType: {\n      NonFungibleUnique: 'NonFungibleUnique',\n    },\n  };\n});\n\ndescribe('createCollectionFunction', () => {\n  it('should create a collection and return a tokenId', async () => {\n    const client = Client.forTestnet();\n    const collectionName = 'test';\n    const collectionSymbol = 'test2';\n\n    const tokenId = await createCollectionFunction({\n      client,\n      myPrivateKey,\n      collectionName,\n      collectionSymbol,\n    });\n\n    expect(tokenId).toEqual('1.2.1234');\n  });\n\n  it('should throw an error when only treasuryAccount is passed', async () => {\n    const client = Client.forTestnet();\n    const collectionName = 'test';\n    const collectionSymbol = 'test2';\n\n    await expect(\n      createCollectionFunction({\n        client,\n        myPrivateKey,\n        collectionName,\n        collectionSymbol,\n        treasuryAccount: '0.0.4321',\n      })\n    ).rejects.toThrow(dictionary.createCollection.treasuryAccountPrivateKeySignRequired);\n  });\n\n  it('should throw an error when only treasuryAccountPrivateKey is passed', async () => {\n    const client = Client.forTestnet();\n    const collectionName = 'test';\n    const collectionSymbol = 'test2';\n\n    await expect(\n      createCollectionFunction({\n        client,\n        myPrivateKey,\n        collectionName,\n        collectionSymbol,\n        treasuryAccountPrivateKey,\n      })\n    ).rejects.toThrow(dictionary.createCollection.treasuryAccountPrivateKeySignRequired);\n  });\n\n  it('should create collection when treasuryAccount and treasuryAccountPrivateKey are passed', async () => {\n    const client = Client.forTestnet();\n    const collectionName = 'test';\n    const collectionSymbol = 'test2';\n\n    const tokenId = await createCollectionFunction({\n      client,\n      myPrivateKey,\n      collectionName,\n      collectionSymbol,\n    });\n\n    expect(tokenId).toEqual('1.2.1234');\n  });\n\n  it('should throw an error if collectionName is not provided', async () => {\n    const client = Client.forTestnet();\n    const collectionSymbol = 'test2';\n    const keys = {\n      admin: myPrivateKey,\n      supply: myPrivateKey,\n    };\n    const treasuryAccount = '0.0.4321';\n\n    await expect(\n      createCollectionFunction({\n        client,\n        myPrivateKey,\n        collectionName: '',\n        collectionSymbol,\n        keys,\n        treasuryAccount,\n        treasuryAccountPrivateKey,\n      })\n    ).rejects.toThrow(dictionary.createCollection.collectionNameRequired);\n  });\n\n  it('should throw an error if collectionSymbol is not provided', async () => {\n    const client = Client.forTestnet();\n    const keys = {\n      admin: myPrivateKey,\n      supply: myPrivateKey,\n    };\n    const treasuryAccount = '0.0.4321';\n\n    await expect(\n      createCollectionFunction({\n        client,\n        myPrivateKey,\n        collectionName: 'abc',\n        collectionSymbol: '',\n        keys,\n        treasuryAccount,\n        treasuryAccountPrivateKey,\n      })\n    ).rejects.toThrow(dictionary.createCollection.collectionSymbolRequired);\n  });\n\n  it('should create a collection with keys', async () => {\n    const client = Client.forTestnet();\n    const collectionName = 'test';\n    const collectionSymbol = 'test2';\n    const keys = {\n      admin: PrivateKey.generateED25519(),\n      supply: myPrivateKey,\n    };\n\n    const tokenId = await createCollectionFunction({\n      client,\n      myPrivateKey,\n      collectionName,\n      collectionSymbol,\n      keys,\n    });\n\n    expect(tokenId).toEqual('1.2.1234');\n  });\n});\n"],"mappings":"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","ignoreList":[]}