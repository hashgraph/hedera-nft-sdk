{"version":3,"file":"estimate-create-collection-in-dollars.test.js","names":["estimateCreateCollectionInDollars","myAccountId","myPrivateKey","mySecondAccountId","FeeFactory","feeFactoryInstance","beforeAll","describe","it","dollars","collectionName","collectionSymbol","expect","toEqual","treasuryAccount","treasuryAccountPrivateKey","royaltyFee","collectorAccountId","numerator","denominator","allCollectorsAreExempt","fallbackFee","hbarAmount","customFees"],"sources":["../../../../../src/test/unit/create-collection/estimate-create-collection-in-dollars.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { estimateCreateCollectionInDollars } from '../../../nftSDKFunctions/estimate-create-collection-in-dollars';\nimport { myAccountId, myPrivateKey, mySecondAccountId } from '../../__mocks__/consts';\nimport { FeeFactory } from '../../../feeFactory';\n\nlet feeFactoryInstance: FeeFactory;\n\nbeforeAll(() => {\n  feeFactoryInstance = new FeeFactory();\n});\n\ndescribe('estimateCreateCollectionInDollars', () => {\n  it('should work properly', () => {\n    const dollars = estimateCreateCollectionInDollars({\n      collectionName: 'test',\n      collectionSymbol: 'test2',\n    });\n\n    expect(dollars).toEqual(0.86112);\n  });\n\n  it('should return a value when valid parameters are passed', () => {\n    const dollars = estimateCreateCollectionInDollars({\n      collectionName: 'test',\n      collectionSymbol: 'test2',\n      treasuryAccount: '0.0.1234',\n      treasuryAccountPrivateKey: myPrivateKey,\n    });\n\n    expect(dollars).toEqual(0.90605);\n  });\n\n  it('should return a value when royalty fees are passed', () => {\n    const royaltyFee = feeFactoryInstance.royaltyFee({\n      collectorAccountId: myAccountId,\n      numerator: 1,\n      denominator: 100,\n      allCollectorsAreExempt: false,\n      fallbackFee: {\n        allCollectorsAreExempt: false,\n        collectorAccountId: mySecondAccountId,\n        hbarAmount: 100,\n      },\n    });\n\n    const dollars = estimateCreateCollectionInDollars({\n      collectionName: 'test',\n      collectionSymbol: 'test2',\n      treasuryAccount: '0.0.1234',\n      treasuryAccountPrivateKey: myPrivateKey,\n      customFees: [royaltyFee],\n    });\n\n    expect(dollars).toEqual(1.81324);\n  });\n});\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,iCAAiC,QAAQ,gEAAgE;AAClH,SAASC,WAAW,EAAEC,YAAY,EAAEC,iBAAiB,QAAQ,wBAAwB;AACrF,SAASC,UAAU,QAAQ,qBAAqB;AAEhD,IAAIC,kBAA8B;AAElCC,SAAS,CAAC,MAAM;EACdD,kBAAkB,GAAG,IAAID,UAAU,CAAC,CAAC;AACvC,CAAC,CAAC;AAEFG,QAAQ,CAAC,mCAAmC,EAAE,MAAM;EAClDC,EAAE,CAAC,sBAAsB,EAAE,MAAM;IAC/B,MAAMC,OAAO,GAAGT,iCAAiC,CAAC;MAChDU,cAAc,EAAE,MAAM;MACtBC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IAEFC,MAAM,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,OAAO,CAAC;EAClC,CAAC,CAAC;EAEFL,EAAE,CAAC,wDAAwD,EAAE,MAAM;IACjE,MAAMC,OAAO,GAAGT,iCAAiC,CAAC;MAChDU,cAAc,EAAE,MAAM;MACtBC,gBAAgB,EAAE,OAAO;MACzBG,eAAe,EAAE,UAAU;MAC3BC,yBAAyB,EAAEb;IAC7B,CAAC,CAAC;IAEFU,MAAM,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,OAAO,CAAC;EAClC,CAAC,CAAC;EAEFL,EAAE,CAAC,oDAAoD,EAAE,MAAM;IAC7D,MAAMQ,UAAU,GAAGX,kBAAkB,CAACW,UAAU,CAAC;MAC/CC,kBAAkB,EAAEhB,WAAW;MAC/BiB,SAAS,EAAE,CAAC;MACZC,WAAW,EAAE,GAAG;MAChBC,sBAAsB,EAAE,KAAK;MAC7BC,WAAW,EAAE;QACXD,sBAAsB,EAAE,KAAK;QAC7BH,kBAAkB,EAAEd,iBAAiB;QACrCmB,UAAU,EAAE;MACd;IACF,CAAC,CAAC;IAEF,MAAMb,OAAO,GAAGT,iCAAiC,CAAC;MAChDU,cAAc,EAAE,MAAM;MACtBC,gBAAgB,EAAE,OAAO;MACzBG,eAAe,EAAE,UAAU;MAC3BC,yBAAyB,EAAEb,YAAY;MACvCqB,UAAU,EAAE,CAACP,UAAU;IACzB,CAAC,CAAC;IAEFJ,MAAM,CAACH,OAAO,CAAC,CAACI,OAAO,CAAC,OAAO,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}