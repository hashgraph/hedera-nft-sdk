{"version":3,"file":"calculate-risk-score-from-data.test.js","names":["calculateRiskScoreFromData","metadata","supply_type","supply_key","max_supply","total_supply","customRiskLevels","NORISK","LOW","MEDIUM","HIGH","customWeights","keys","admin_key","wipe_key","freeze_key","kyc_key","pause_key","fee_schedule_key","properties","supply_type_infinite","describe","it","metadataWithDifferentSupplyType","riskScore","riskLevel","riskScoreFactors","expect","toBe","toEqual","metadataWithDifferentSupplyKey"],"sources":["../../../../../src/test/unit/risk-score/calculate-risk-score-from-data.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { calculateRiskScoreFromData } from '../../../risk';\nimport { Metadata, RiskLevels, Weights } from '../../../types/risk';\n\nconst metadata: Metadata = {\n  supply_type: 'FINITE',\n  supply_key: 'testKey',\n  max_supply: 'testMaxSupply',\n  total_supply: 'testTotalSupply',\n};\n\nconst customRiskLevels: RiskLevels = {\n  NORISK: 0,\n  LOW: 10,\n  MEDIUM: 400,\n  HIGH: 500,\n};\n\nconst customWeights: Weights = {\n  keys: {\n    admin_key: 200,\n    wipe_key: 200,\n    freeze_key: 200,\n    supply_key: 200,\n    kyc_key: 200,\n    pause_key: 200,\n    fee_schedule_key: 200,\n  },\n  properties: {\n    supply_type_infinite: 200,\n  },\n};\n\ndescribe('CalculateRiskScoreFromData', () => {\n  it('should calculate risk score with default metadata object', () => {\n    const metadataWithDifferentSupplyType: Metadata = {\n      ...metadata,\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({ metadata: metadataWithDifferentSupplyType });\n\n    expect(riskScore).toBe(20);\n    expect(riskLevel).toBe('LOW');\n    expect(riskScoreFactors).toEqual({ supply_key: 20 });\n  });\n\n  it('should calculate risk score when fee_schedule_key is extra provided', () => {\n    const metadataWithDifferentSupplyKey: Metadata = {\n      ...metadata,\n      fee_schedule_key: 'fee_schedule_key',\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({ metadata: metadataWithDifferentSupplyKey });\n\n    expect(riskScore).toBe(60);\n    expect(riskLevel).toBe('MEDIUM');\n    expect(riskScoreFactors).toEqual({ supply_key: 20, fee_schedule_key: 40 });\n  });\n\n  it('should calculate risk score when pause_key is extra provided', () => {\n    const metadataWithDifferentSupplyKey: Metadata = {\n      ...metadata,\n      pause_key: 'pause_key',\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({ metadata: metadataWithDifferentSupplyKey });\n\n    expect(riskScore).toBe(70);\n    expect(riskLevel).toBe('MEDIUM');\n    expect(riskScoreFactors).toEqual({ supply_key: 20, pause_key: 50 });\n  });\n\n  it('should calculate risk score when admin_key is extra provided', () => {\n    const metadataWithDifferentSupplyKey: Metadata = {\n      ...metadata,\n      admin_key: 'admin_key',\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({ metadata: metadataWithDifferentSupplyKey });\n\n    expect(riskScore).toBe(220);\n    expect(riskLevel).toBe('HIGH');\n    expect(riskScoreFactors).toEqual({ supply_key: 20, admin_key: 200 });\n  });\n\n  it('should calculate risk score with custom weights and custom risk levels', () => {\n    const metadataWithDifferentSupplyKey: Metadata = {\n      ...metadata,\n      kyc_key: 'kyc_key',\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({\n      metadata: metadataWithDifferentSupplyKey,\n      customWeights,\n      customRiskLevels,\n    });\n\n    expect(riskScore).toBe(400);\n    expect(riskLevel).toBe('MEDIUM');\n    expect(riskScoreFactors).toEqual({ supply_key: 200, kyc_key: 200 });\n  });\n\n  it('should calculate risk score with custom weights ', () => {\n    const metadataWithDifferentSupplyKey: Metadata = {\n      ...metadata,\n      kyc_key: 'kyc_key',\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({\n      metadata: metadataWithDifferentSupplyKey,\n      customWeights,\n    });\n\n    expect(riskScore).toBe(400);\n    expect(riskLevel).toBe('HIGH');\n    expect(riskScoreFactors).toEqual({ supply_key: 200, kyc_key: 200 });\n  });\n\n  it('should calculate risk score with custom risk levels ', () => {\n    const metadataWithDifferentSupplyKey: Metadata = {\n      ...metadata,\n      kyc_key: 'kyc_key',\n    };\n    const { riskScore, riskLevel, riskScoreFactors } = calculateRiskScoreFromData({\n      metadata: metadataWithDifferentSupplyKey,\n      customRiskLevels,\n    });\n\n    expect(riskScore).toBe(70);\n    expect(riskLevel).toBe('MEDIUM');\n    expect(riskScoreFactors).toEqual({ supply_key: 20, kyc_key: 50 });\n  });\n});\n"],"mappings":"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","ignoreList":[]}