{"version":3,"file":"logIn.test.js","names":["logIn","AccountId","Client","myAccountId","myPrivateKey","dictionary","jest","mock","mockedSDK","requireActual","forName","fn","mockReturnThis","forLocalNode","forNetwork","setMirrorNetwork","setOperator","PrivateKey","generateED25519","toString","describe","it","network","expect","toHaveBeenCalled","toHaveBeenCalledWith","toThrow","createCollection","myAccountIdRequired","localNode","mirrorNetwork","localMirrorNode"],"sources":["../../../../src/test/unit/logIn.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { logIn } from '../../nftSDKFunctions/log-in';\nimport { AccountId, Client } from '@hashgraph/sdk';\nimport { myAccountId, myPrivateKey } from '../__mocks__/consts';\nimport { dictionary } from '../../utils/constants/dictionary';\n\njest.mock('@hashgraph/sdk', () => {\n  const mockedSDK = jest.requireActual('@hashgraph/sdk');\n\n  return {\n    Client: {\n      forName: jest.fn().mockReturnThis(),\n      forLocalNode: jest.fn().mockReturnThis(),\n      forNetwork: jest.fn().mockReturnThis(),\n      setMirrorNetwork: jest.fn().mockReturnThis(),\n      setOperator: jest.fn(),\n    },\n    AccountId: jest.fn().mockReturnThis(),\n    PrivateKey: {\n      ...mockedSDK.PrivateKey,\n      generateED25519: jest.fn(() => ({\n        toString: () => 'fake-private-key',\n      })),\n    },\n  };\n});\n\ndescribe('logIn', () => {\n  it('should call setOperator with correct parameters', () => {\n    logIn({ myAccountId, myPrivateKey, network: 'testnet' });\n\n    expect(Client.forName).toHaveBeenCalled();\n    expect(Client.forName('testnet').setOperator).toHaveBeenCalledWith(myAccountId, myPrivateKey);\n  });\n\n  it('should throw an error if myAccountId is not provided', () => {\n    expect(() => logIn({ myAccountId: '', myPrivateKey, network: 'testnet' })).toThrow(dictionary.createCollection.myAccountIdRequired);\n  });\n\n  it('should create a client for local network', () => {\n    logIn({ myAccountId, myPrivateKey, network: 'localnode' });\n\n    expect(Client.forLocalNode).toHaveBeenCalled();\n    expect(Client.forLocalNode().setOperator).toHaveBeenCalledWith(myAccountId, myPrivateKey);\n  });\n\n  it('should create a client for local network with custom node', () => {\n    const localNode = { '127.0.0.1:50211': new AccountId(3) };\n    logIn({ myAccountId, myPrivateKey, network: 'localnode', localNode: localNode });\n\n    expect(Client.forNetwork).toHaveBeenCalled();\n    expect(Client.forNetwork(localNode).setOperator).toHaveBeenCalledWith(myAccountId, myPrivateKey);\n  });\n\n  it('should create a client for local network with custom node and mirror network', () => {\n    const localNode = { '127.0.0.1:50211': new AccountId(3) };\n    const mirrorNetwork = 'mirrorNetwork';\n    logIn({ myAccountId, myPrivateKey, network: 'localnode', localNode: localNode, localMirrorNode: mirrorNetwork });\n\n    expect(Client.forNetwork).toHaveBeenCalled();\n    expect(Client.forNetwork(localNode).setMirrorNetwork).toHaveBeenCalledWith(mirrorNetwork);\n    expect(Client.forNetwork(localNode).setOperator).toHaveBeenCalledWith(myAccountId, myPrivateKey);\n  });\n});\n"],"mappings":"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","ignoreList":[]}