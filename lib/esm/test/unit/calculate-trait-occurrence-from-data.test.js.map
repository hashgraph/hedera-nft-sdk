{"version":3,"file":"calculate-trait-occurrence-from-data.test.js","names":["calculateTraitOccurrenceFromData","nftMetadata","name","creator","description","image","type","properties","external_url","url","attributes","trait_type","value","describe","it","result","expect","toStrictEqual","trait","values","occurence"],"sources":["../../../../src/test/unit/calculate-trait-occurrence-from-data.test.ts"],"sourcesContent":["import { calculateTraitOccurrenceFromData } from '../../rarity';\n\nconst nftMetadata = [\n  {\n    name: 'Example NFT 1',\n    creator: 'Hedera',\n    description: 'This is an example NFT 1',\n    image: 'https://nft.com/mycollection/1.jpg',\n    type: 'image/jpeg',\n    properties: {\n      external_url: 'https://nft.com/mycollection/1',\n      url: 'https://nft.com/mycollection/1',\n    },\n    attributes: [\n      { trait_type: 'color', value: 'rgb(0,255,0)' },\n      { trait_type: 'hasPipe', value: 'false' },\n      { trait_type: 'stamina', value: '65' },\n    ],\n  },\n  {\n    name: 'Example NFT 1',\n    creator: 'Hedera',\n    description: 'This is an example NFT 1',\n    image: 'https://nft.com/mycollection/1.jpg',\n    type: 'image/jpeg',\n    properties: {\n      external_url: 'https://nft.com/mycollection/1',\n      url: 'https://nft.com/mycollection/1',\n    },\n    attributes: [\n      { trait_type: 'color', value: 'rgb(0,255,0)' },\n      { trait_type: 'hasPipe', value: 'false' },\n      { trait_type: 'stamina', value: '65' },\n    ],\n  },\n];\n\ndescribe('calculateRarityFromData', () => {\n  it('should return an array of RarityResult objects', async () => {\n    const result = calculateTraitOccurrenceFromData(nftMetadata);\n\n    expect(result).toStrictEqual([\n      {\n        trait: 'color',\n        values: [{ value: 'rgb(0,255,0)', occurence: '100.00' }],\n      },\n      {\n        trait: 'hasPipe',\n        values: [{ value: 'false', occurence: '100.00' }],\n      },\n      {\n        trait: 'stamina',\n        values: [{ value: '65', occurence: '100.00' }],\n      },\n    ]);\n  });\n});\n"],"mappings":"AAAA,SAASA,gCAAgC,QAAQ,cAAc;AAE/D,MAAMC,WAAW,GAAG,CAClB;EACEC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE,QAAQ;EACjBC,WAAW,EAAE,0BAA0B;EACvCC,KAAK,EAAE,oCAAoC;EAC3CC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVC,YAAY,EAAE,gCAAgC;IAC9CC,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE,CACV;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAe,CAAC,EAC9C;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACzC;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAK,CAAC;AAE1C,CAAC,EACD;EACEV,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE,QAAQ;EACjBC,WAAW,EAAE,0BAA0B;EACvCC,KAAK,EAAE,oCAAoC;EAC3CC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVC,YAAY,EAAE,gCAAgC;IAC9CC,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE,CACV;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAe,CAAC,EAC9C;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAQ,CAAC,EACzC;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAK,CAAC;AAE1C,CAAC,CACF;AAEDC,QAAQ,CAAC,yBAAyB,EAAE,MAAM;EACxCC,EAAE,CAAC,gDAAgD,EAAE,YAAY;IAC/D,MAAMC,MAAM,GAAGf,gCAAgC,CAACC,WAAW,CAAC;IAE5De,MAAM,CAACD,MAAM,CAAC,CAACE,aAAa,CAAC,CAC3B;MACEC,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE,CAAC;QAAEP,KAAK,EAAE,cAAc;QAAEQ,SAAS,EAAE;MAAS,CAAC;IACzD,CAAC,EACD;MACEF,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,CAAC;QAAEP,KAAK,EAAE,OAAO;QAAEQ,SAAS,EAAE;MAAS,CAAC;IAClD,CAAC,EACD;MACEF,KAAK,EAAE,SAAS;MAChBC,MAAM,EAAE,CAAC;QAAEP,KAAK,EAAE,IAAI;QAAEQ,SAAS,EAAE;MAAS,CAAC;IAC/C,CAAC,CACF,CAAC;EACJ,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}