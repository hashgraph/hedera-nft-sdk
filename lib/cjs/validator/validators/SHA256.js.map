{"version":3,"file":"SHA256.js","names":["SHA256Validator","instance","sha256Regex","errors","checksum","test","push","type","msg","files","map","file","hasOwnProperty","exports"],"sources":["../../../../src/validator/validators/SHA256.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2023 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\n\nimport type { Instance } from '../../types/validator';\n\n/**\n * The SHA256 validator applies specific rules for SHA256 hashes,\n * mostly present in \"checksum\" fields to verify the integrity of images or other file types\n *\n * @see https://github.com/hashgraph/hedera-improvement-proposal/blob/main/HIP/hip-412.md#checksum\n *\n * @param {Object} instance - The JSON object to validate against a schema\n * @returns {Array} - Contains no, one, or multiple error objects that describe errors for the validated {instance}\n */\nconst SHA256Validator = (instance: Instance) => {\n  const sha256Regex = /^[0-9a-f]{64}$/i;\n  const errors = [];\n\n  if (instance.checksum && !sha256Regex.test(instance.checksum)) {\n    errors.push({\n      type: 'SHA256',\n      msg: `Not a SHA256 hash for checksum, got: ${instance.checksum}`,\n    });\n  }\n\n  if (instance.files) {\n    instance.files.map((file) => {\n      if (file.hasOwnProperty('checksum') && !sha256Regex.test(file.checksum)) {\n        errors.push({\n          type: 'SHA256',\n          msg: `Not a SHA256 hash for file, got: ${file.checksum}`,\n        });\n      }\n    });\n  }\n\n  return errors;\n};\n\nexport { SHA256Validator };\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAMA,eAAe,GAAIC,QAAkB,IAAK;EAC9C,MAAMC,WAAW,GAAG,iBAAiB;EACrC,MAAMC,MAAM,GAAG,EAAE;EAEjB,IAAIF,QAAQ,CAACG,QAAQ,IAAI,CAACF,WAAW,CAACG,IAAI,CAACJ,QAAQ,CAACG,QAAQ,CAAC,EAAE;IAC7DD,MAAM,CAACG,IAAI,CAAC;MACVC,IAAI,EAAE,QAAQ;MACdC,GAAG,EAAG,wCAAuCP,QAAQ,CAACG,QAAS;IACjE,CAAC,CAAC;EACJ;EAEA,IAAIH,QAAQ,CAACQ,KAAK,EAAE;IAClBR,QAAQ,CAACQ,KAAK,CAACC,GAAG,CAAEC,IAAI,IAAK;MAC3B,IAAIA,IAAI,CAACC,cAAc,CAAC,UAAU,CAAC,IAAI,CAACV,WAAW,CAACG,IAAI,CAACM,IAAI,CAACP,QAAQ,CAAC,EAAE;QACvED,MAAM,CAACG,IAAI,CAAC;UACVC,IAAI,EAAE,QAAQ;UACdC,GAAG,EAAG,oCAAmCG,IAAI,CAACP,QAAS;QACzD,CAAC,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EAEA,OAAOD,MAAM;AACf,CAAC;AAACU,OAAA,CAAAb,eAAA,GAAAA,eAAA","ignoreList":[]}