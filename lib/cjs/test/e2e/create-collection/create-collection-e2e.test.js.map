{"version":3,"file":"create-collection-e2e.test.js","names":["_sdk","require","_e2eConsts","_consts","_getTokenInfo","_dateFns","describe","it","tokenId","nftSDK","createCollection","collectionName","collectionSymbol","expect","toBeDefined","MIRROR_NODE_DELAY","adminKey","PrivateKey","generateED25519","keys","admin","tokenInfo","getTokenInfo","client","toString","toEqual","publicKey","toStringDer","LONG_E2E_TIMEOUT","treasuryAccountPrivateKey","secondPrivateKey","treasuryAccount","secondAccountId","treasuryAccountId","expirationTime","add","Date","days","toDate","setMilliseconds","failing","expectedAutoRenewPeriod","millisecondsToSeconds","milliseconds","autoRenewPeriod","autoRenewAccount","autoRenewAccountPrivateKey","autoRenewAccountId","seconds","Long","expectedMemo","memo","tokenMemo","maxSupply","toNumber","kycKey","freezeKey","wipeKey","supplyKey","feeScheduleKey","pauseKey","KYC","freeze","wipe","supply","feeSchedule","pause"],"sources":["../../../../../src/test/e2e/create-collection/create-collection-e2e.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Long, PrivateKey } from '@hashgraph/sdk';\nimport { nftSDK, secondAccountId, secondPrivateKey } from '../e2e-consts';\nimport { LONG_E2E_TIMEOUT, MIRROR_NODE_DELAY } from '../../__mocks__/consts';\nimport { getTokenInfo } from '../../../utils/hedera/get-token-info';\nimport { add, milliseconds, millisecondsToSeconds } from 'date-fns';\n\ndescribe('createCollectionFunction e2e', () => {\n  it(\n    'creates a collection',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n      });\n\n      expect(tokenId).toBeDefined();\n    },\n    MIRROR_NODE_DELAY\n  );\n\n  it(\n    'creates a collection with Admin Key',\n    async () => {\n      const adminKey = PrivateKey.generateED25519();\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_admin',\n        collectionSymbol: 'test_symbol_admin',\n        keys: {\n          admin: adminKey,\n        },\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n\n      expect(tokenId).toBeDefined();\n      expect(tokenInfo.adminKey?.toString()).toEqual(adminKey.publicKey.toStringDer());\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with different treasury account',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_treasury',\n        collectionSymbol: 'test_symbol_treasury',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n\n      expect(tokenId).toBeDefined();\n      expect(tokenInfo.treasuryAccountId?.toString()).toEqual(secondAccountId);\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with expiration time',\n    async () => {\n      const expirationTime = add(new Date(), { days: 1 });\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_expiration_time',\n        collectionSymbol: 'TNET',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        expirationTime: expirationTime,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.expirationTime).toBeDefined();\n      expect(tokenInfo.expirationTime?.toDate()).toEqual(new Date(expirationTime.setMilliseconds(0)));\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  //This test is failing because of the issue in the Hedera SDK. When the issue is resolved, this test should be enabled (remove .failing).\n  it.failing(\n    'creates a collection with auto renew account and period',\n    async () => {\n      const expectedAutoRenewPeriod = millisecondsToSeconds(milliseconds({ days: 30 }));\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_auto_renew_account_and_period',\n        collectionSymbol: 'TNATRAAP',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        autoRenewPeriod: expectedAutoRenewPeriod,\n        autoRenewAccount: secondAccountId,\n        autoRenewAccountPrivateKey: secondPrivateKey,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.autoRenewAccountId).toBeDefined();\n      expect(tokenInfo.autoRenewAccountId?.toString()).toEqual(secondAccountId);\n      expect(tokenInfo.autoRenewPeriod).toBeDefined();\n      expect(tokenInfo.autoRenewPeriod?.seconds).toEqual(new Long(expectedAutoRenewPeriod, 0));\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with auto renew period',\n    async () => {\n      const expectedAutoRenewPeriod = millisecondsToSeconds(milliseconds({ days: 30 }));\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_auto_renew_period',\n        collectionSymbol: 'TNARP',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        autoRenewPeriod: expectedAutoRenewPeriod,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.autoRenewPeriod).toBeDefined();\n      expect(tokenInfo.autoRenewPeriod?.seconds).toEqual(new Long(expectedAutoRenewPeriod, 0));\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with memo',\n    async () => {\n      const expectedMemo = 'test_memo';\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_memo',\n        collectionSymbol: 'TNM',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        memo: expectedMemo,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.tokenMemo).toBeDefined();\n      expect(tokenInfo.tokenMemo).toEqual(expectedMemo);\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with a specified maxSupply',\n    async () => {\n      const maxSupply = 10;\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_max_supply',\n        collectionSymbol: 'TMAXSUP',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        maxSupply,\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.maxSupply).toBeDefined();\n      expect(tokenInfo.maxSupply.toNumber()).toEqual(maxSupply);\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'creates a collection with all types of keys',\n    async () => {\n      const adminKey = PrivateKey.generateED25519();\n      const kycKey = PrivateKey.generateED25519();\n      const freezeKey = PrivateKey.generateED25519();\n      const wipeKey = PrivateKey.generateED25519();\n      const supplyKey = PrivateKey.generateED25519();\n      const feeScheduleKey = PrivateKey.generateED25519();\n      const pauseKey = PrivateKey.generateED25519();\n\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name_all_keys',\n        collectionSymbol: 'TNALLKEYS',\n        treasuryAccountPrivateKey: secondPrivateKey,\n        treasuryAccount: secondAccountId,\n        keys: {\n          admin: adminKey,\n          KYC: kycKey,\n          freeze: freezeKey,\n          wipe: wipeKey,\n          supply: supplyKey,\n          feeSchedule: feeScheduleKey,\n          pause: pauseKey,\n        },\n      });\n\n      const tokenInfo = await getTokenInfo(tokenId, nftSDK.client);\n      expect(tokenInfo.adminKey?.toString()).toEqual(adminKey.publicKey.toStringDer());\n      expect(tokenInfo.kycKey?.toString()).toEqual(kycKey.publicKey.toStringDer());\n      expect(tokenInfo.freezeKey?.toString()).toEqual(freezeKey.publicKey.toStringDer());\n      expect(tokenInfo.wipeKey?.toString()).toEqual(wipeKey.publicKey.toStringDer());\n      expect(tokenInfo.supplyKey?.toString()).toEqual(supplyKey.publicKey.toStringDer());\n      expect(tokenInfo.feeScheduleKey?.toString()).toEqual(feeScheduleKey.publicKey.toStringDer());\n      expect(tokenInfo.pauseKey?.toString()).toEqual(pauseKey.publicKey.toStringDer());\n    },\n    LONG_E2E_TIMEOUT\n  );\n});\n"],"mappings":"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","ignoreList":[]}