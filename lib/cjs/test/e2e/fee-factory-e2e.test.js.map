{"version":3,"file":"fee-factory-e2e.test.js","names":["_e2eConsts","require","_consts","_sdk","_dictionary","describe","it","fixedFee","feeFactoryInstance","allCollectorsAreExempt","collectorAccountId","myAccountId","hbarAmount","tokenId","nftSDK","createCollection","collectionName","collectionSymbol","customFees","query","TokenInfoQuery","setTokenId","tokenInfo","execute","client","customFeeAccId","length","CustomFixedFee","_feeCollectorAccountId","toString","expect","toEqual","toBeDefined","royaltyFee","numerator","denominator","fallbackFee","mySecondAccountId","customFeeDenominator","undefined","customFeeNumenator","CustomRoyaltyFee","_denominator","toInt","_numerator","Number","amount","denominatingTokenId","rejects","toThrow","dictionary","hederaActions","tooManyCustomFees"],"sources":["../../../../src/test/e2e/fee-factory-e2e.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { feeFactoryInstance, nftSDK } from './e2e-consts';\nimport { myAccountId, mySecondAccountId } from '../__mocks__/consts';\nimport { CustomFixedFee, CustomRoyaltyFee, TokenInfoQuery } from '@hashgraph/sdk';\nimport { dictionary } from '../../utils/constants/dictionary';\n\ndescribe('feeFactory', () => {\n  it('creates a collection with fixedFee', async () => {\n    const fixedFee = feeFactoryInstance.fixedFee({\n      allCollectorsAreExempt: false,\n      collectorAccountId: myAccountId,\n      hbarAmount: 100,\n    });\n\n    const tokenId = await nftSDK.createCollection({\n      collectionName: 'test_name',\n      collectionSymbol: 'test_symbol',\n      customFees: [fixedFee],\n    });\n\n    const query = new TokenInfoQuery().setTokenId(tokenId);\n    const tokenInfo = await query.execute(nftSDK.client);\n    const customFees = tokenInfo.customFees;\n    let customFeeAccId = '';\n\n    if (customFees.length > 0 && customFees[0] instanceof CustomFixedFee) {\n      customFeeAccId = customFees[0]._feeCollectorAccountId!.toString();\n    }\n\n    expect(customFeeAccId).toEqual(myAccountId);\n    expect(tokenId).toBeDefined();\n  });\n\n  it('creates a collection with royaltyFee', async () => {\n    const royaltyFee = feeFactoryInstance.royaltyFee({\n      collectorAccountId: myAccountId,\n      numerator: 1,\n      denominator: 100,\n      allCollectorsAreExempt: false,\n      fallbackFee: {\n        allCollectorsAreExempt: false,\n        collectorAccountId: mySecondAccountId,\n        hbarAmount: 100,\n      },\n    });\n\n    const tokenId = await nftSDK.createCollection({\n      collectionName: 'test_name',\n      collectionSymbol: 'test_symbol',\n      customFees: [royaltyFee],\n    });\n\n    const query = new TokenInfoQuery().setTokenId(tokenId);\n    const tokenInfo = await query.execute(nftSDK.client);\n    const customFees = tokenInfo.customFees;\n    let customFeeDenominator = undefined;\n    let customFeeNumenator = undefined;\n\n    if (customFees.length > 0 && customFees[0] instanceof CustomRoyaltyFee) {\n      customFeeDenominator = customFees[0]._denominator.toInt();\n      customFeeNumenator = customFees[0]._numerator.toString();\n    }\n\n    expect(Number(customFeeNumenator)).toEqual(royaltyFee.numerator.toInt());\n    expect(customFeeDenominator).toEqual(royaltyFee.denominator.toInt());\n    expect(tokenId).toBeDefined();\n  });\n\n  it('creates a collection with royaltyFee and fixedFee', async () => {\n    const royaltyFee = feeFactoryInstance.royaltyFee({\n      collectorAccountId: myAccountId,\n      numerator: 1,\n      denominator: 100,\n      allCollectorsAreExempt: false,\n      fallbackFee: {\n        allCollectorsAreExempt: false,\n        collectorAccountId: mySecondAccountId,\n        hbarAmount: 100,\n      },\n    });\n\n    const fixedFee = feeFactoryInstance.fixedFee({\n      allCollectorsAreExempt: false,\n      collectorAccountId: myAccountId,\n      hbarAmount: 100,\n    });\n\n    const tokenId = await nftSDK.createCollection({\n      collectionName: 'test_name',\n      collectionSymbol: 'test_symbol',\n      customFees: [royaltyFee, fixedFee],\n    });\n\n    const query = new TokenInfoQuery().setTokenId(tokenId);\n    const tokenInfo = await query.execute(nftSDK.client);\n    const customFees = tokenInfo.customFees;\n    let customFeeDenominator = undefined;\n    let customFeeNumenator = undefined;\n\n    if (customFees.length > 0 && customFees[0] instanceof CustomRoyaltyFee) {\n      customFeeDenominator = customFees[0]._denominator.toInt();\n      customFeeNumenator = customFees[0]._numerator.toString();\n    }\n\n    expect(Number(customFeeNumenator)).toEqual(royaltyFee.numerator.toInt());\n    expect(customFeeDenominator).toEqual(royaltyFee.denominator.toInt());\n    expect(tokenId).toBeDefined();\n  });\n\n  it('throws error when more than 10 customFees', async () => {\n    const fixedFee = feeFactoryInstance.fixedFee({\n      allCollectorsAreExempt: false,\n      collectorAccountId: myAccountId,\n      amount: 100,\n      denominatingTokenId: myAccountId,\n    });\n\n    await expect(\n      nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n        customFees: [fixedFee, fixedFee, fixedFee, fixedFee, fixedFee, fixedFee, fixedFee, fixedFee, fixedFee, fixedFee, fixedFee],\n      })\n    ).rejects.toThrow(dictionary.hederaActions.tooManyCustomFees);\n  });\n});\n"],"mappings":"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","ignoreList":[]}