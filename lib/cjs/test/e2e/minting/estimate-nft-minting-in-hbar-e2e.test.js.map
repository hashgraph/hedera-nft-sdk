{"version":3,"file":"estimate-nft-minting-in-hbar-e2e.test.js","names":["_e2eConsts","require","_sdk","_consts","_estimateNftMintingInHbar","_const","_roundToPrecision","_isWithinAcceptableDifference","describe","testCases","amount","forEach","_ref","it","tokenId","nftSDK","createCollection","collectionName","collectionSymbol","metaData","Array","fill","CIDs","map","Buffer","from","transaction","TokenMintTransaction","setTokenId","setMaxTransactionFee","Hbar","mintingMaxTransactionFee","setMetadata","freezeWith","client","txResponse","execute","record","getRecord","estimatedHbarNumber","estimateNftMintingInHbar","amountOfNfts","network","estimatedHbars","roundToPrecision","transactionFeeHbars","transactionFee","toTinybars","toNumber","estimatedHbarsValue","expect","toBeDefined","transactionId","isWithinAcceptableDifference","toBe","LONG_E2E_TIMEOUT"],"sources":["../../../../../src/test/e2e/minting/estimate-nft-minting-in-hbar-e2e.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { nftSDK } from '../e2e-consts';\nimport { Hbar, TokenMintTransaction } from '@hashgraph/sdk';\nimport { LONG_E2E_TIMEOUT } from '../../__mocks__/consts';\nimport { estimateNftMintingInHbar } from '../../../nftSDKFunctions/estimate-nft-minting-in-hbar';\nimport { mintingMaxTransactionFee } from '../../../utils/const';\nimport { roundToPrecision } from '../../helpers/round-to-precision';\nimport { isWithinAcceptableDifference } from '../../helpers/is-within-acceptable-difference';\n\ndescribe('mintSharedMetadata function e2e', () => {\n  const testCases = [{ amount: 1 }, { amount: 3 }, { amount: 10 }];\n\n  testCases.forEach(({ amount }) => {\n    it(\n      `Creating a token and minting ${amount} NFTs into it. Then checking estimated cost`,\n      async () => {\n        const tokenId = await nftSDK.createCollection({\n          collectionName: 'test_name',\n          collectionSymbol: 'test_symbol',\n        });\n\n        const metaData = new Array(amount).fill('www.youtube.com');\n        const CIDs = metaData.map((metaData) => Buffer.from(metaData));\n\n        const transaction = new TokenMintTransaction()\n          .setTokenId(tokenId)\n          .setMaxTransactionFee(new Hbar(mintingMaxTransactionFee))\n          .setMetadata(CIDs)\n          .freezeWith(nftSDK.client);\n\n        const txResponse = await transaction.execute(nftSDK.client);\n        const record = await txResponse.getRecord(nftSDK.client);\n\n        const estimatedHbarNumber = await estimateNftMintingInHbar({\n          amountOfNfts: amount,\n          network: 'testnet',\n        });\n        const estimatedHbars = new Hbar(roundToPrecision(estimatedHbarNumber, 6));\n\n        const transactionFeeHbars = record.transactionFee.toTinybars().toNumber();\n        const estimatedHbarsValue = estimatedHbars.toTinybars().toNumber();\n\n        expect(tokenId).toBeDefined();\n        expect(record.transactionId).toBeDefined();\n        expect(record.transactionFee).toBeDefined();\n        expect(isWithinAcceptableDifference(estimatedHbarsValue, transactionFeeHbars)).toBe(true);\n      },\n      LONG_E2E_TIMEOUT\n    );\n  });\n});\n"],"mappings":";;AAmBA,IAAAA,UAAA,GAAAC,OAAA;AACA,IAAAC,IAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AACA,IAAAG,yBAAA,GAAAH,OAAA;AACA,IAAAI,MAAA,GAAAJ,OAAA;AACA,IAAAK,iBAAA,GAAAL,OAAA;AACA,IAAAM,6BAAA,GAAAN,OAAA;AAzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AASAO,QAAQ,CAAC,iCAAiC,EAAE,MAAM;EAChD,MAAMC,SAAS,GAAG,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAE,CAAC,EAAE;IAAEA,MAAM,EAAE;EAAG,CAAC,CAAC;EAEhED,SAAS,CAACE,OAAO,CAACC,IAAA,IAAgB;IAAA,IAAf;MAAEF;IAAO,CAAC,GAAAE,IAAA;IAC3BC,EAAE,CACC,gCAA+BH,MAAO,6CAA4C,EACnF,YAAY;MACV,MAAMI,OAAO,GAAG,MAAMC,iBAAM,CAACC,gBAAgB,CAAC;QAC5CC,cAAc,EAAE,WAAW;QAC3BC,gBAAgB,EAAE;MACpB,CAAC,CAAC;MAEF,MAAMC,QAAQ,GAAG,IAAIC,KAAK,CAACV,MAAM,CAAC,CAACW,IAAI,CAAC,iBAAiB,CAAC;MAC1D,MAAMC,IAAI,GAAGH,QAAQ,CAACI,GAAG,CAAEJ,QAAQ,IAAKK,MAAM,CAACC,IAAI,CAACN,QAAQ,CAAC,CAAC;MAE9D,MAAMO,WAAW,GAAG,IAAIC,yBAAoB,CAAC,CAAC,CAC3CC,UAAU,CAACd,OAAO,CAAC,CACnBe,oBAAoB,CAAC,IAAIC,SAAI,CAACC,+BAAwB,CAAC,CAAC,CACxDC,WAAW,CAACV,IAAI,CAAC,CACjBW,UAAU,CAAClB,iBAAM,CAACmB,MAAM,CAAC;MAE5B,MAAMC,UAAU,GAAG,MAAMT,WAAW,CAACU,OAAO,CAACrB,iBAAM,CAACmB,MAAM,CAAC;MAC3D,MAAMG,MAAM,GAAG,MAAMF,UAAU,CAACG,SAAS,CAACvB,iBAAM,CAACmB,MAAM,CAAC;MAExD,MAAMK,mBAAmB,GAAG,MAAM,IAAAC,kDAAwB,EAAC;QACzDC,YAAY,EAAE/B,MAAM;QACpBgC,OAAO,EAAE;MACX,CAAC,CAAC;MACF,MAAMC,cAAc,GAAG,IAAIb,SAAI,CAAC,IAAAc,kCAAgB,EAACL,mBAAmB,EAAE,CAAC,CAAC,CAAC;MAEzE,MAAMM,mBAAmB,GAAGR,MAAM,CAACS,cAAc,CAACC,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MACzE,MAAMC,mBAAmB,GAAGN,cAAc,CAACI,UAAU,CAAC,CAAC,CAACC,QAAQ,CAAC,CAAC;MAElEE,MAAM,CAACpC,OAAO,CAAC,CAACqC,WAAW,CAAC,CAAC;MAC7BD,MAAM,CAACb,MAAM,CAACe,aAAa,CAAC,CAACD,WAAW,CAAC,CAAC;MAC1CD,MAAM,CAACb,MAAM,CAACS,cAAc,CAAC,CAACK,WAAW,CAAC,CAAC;MAC3CD,MAAM,CAAC,IAAAG,0DAA4B,EAACJ,mBAAmB,EAAEJ,mBAAmB,CAAC,CAAC,CAACS,IAAI,CAAC,IAAI,CAAC;IAC3F,CAAC,EACDC,wBACF,CAAC;EACH,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}