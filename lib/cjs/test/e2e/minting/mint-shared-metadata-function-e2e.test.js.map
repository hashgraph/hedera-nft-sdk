{"version":3,"file":"mint-shared-metadata-function-e2e.test.js","names":["_sdk","require","_e2eConsts","_consts","describe","testCases","amount","forEach","_ref","it","tokenId","nftSDK","createCollection","collectionName","collectionSymbol","mintedMetadata","mintSharedMetadata","batchSize","metaData","supplyKey","operatorPrivateKey","expect","toBeDefined","toHaveLength","toEqual","arrayContaining","Array","fill","content","serialNumber","any","Number","nftInfos","TokenNftInfoQuery","setNftId","NftId","TokenId","fromString","execute","client","metadata","toString","LONG_E2E_TIMEOUT"],"sources":["../../../../../src/test/e2e/minting/mint-shared-metadata-function-e2e.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { NftId, TokenId, TokenNftInfoQuery } from '@hashgraph/sdk';\nimport { nftSDK, operatorPrivateKey } from '../e2e-consts';\nimport { LONG_E2E_TIMEOUT } from '../../__mocks__/consts';\n\ndescribe('mintSharedMetadata function e2e', () => {\n  const testCases = [{ amount: 1 }, { amount: 3 }, { amount: 10 }];\n\n  testCases.forEach(({ amount }) => {\n    it(\n      'Creating a token and minting ${amount} NFTs into it',\n      async () => {\n        const tokenId = await nftSDK.createCollection({\n          collectionName: 'test_name',\n          collectionSymbol: 'test_symbol',\n        });\n        const mintedMetadata = await nftSDK.mintSharedMetadata({\n          tokenId,\n          amount,\n          batchSize: 2,\n          metaData: 'www.youtube.com',\n          supplyKey: operatorPrivateKey,\n        });\n\n        expect(tokenId).toBeDefined();\n        expect(mintedMetadata).toBeDefined();\n        expect(mintedMetadata).toHaveLength(amount);\n        expect(mintedMetadata).toEqual(\n          expect.arrayContaining(\n            Array(amount).fill({\n              content: 'www.youtube.com',\n              serialNumber: expect.any(Number),\n            })\n          )\n        );\n\n        for (const metaData of mintedMetadata) {\n          const nftInfos = await new TokenNftInfoQuery()\n            .setNftId(new NftId(TokenId.fromString(tokenId), metaData.serialNumber))\n            .execute(nftSDK.client);\n\n          expect(nftInfos[0].metadata!.toString()).toEqual('www.youtube.com');\n        }\n      },\n      LONG_E2E_TIMEOUT\n    );\n  });\n\n  it(\n    'Creating a token and minting 1 NFTs into it with default supplyKey',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n      });\n      const mintedMetadata = await nftSDK.mintSharedMetadata({\n        tokenId,\n        amount: 1,\n        batchSize: 2,\n        metaData: 'www.youtube.com',\n      });\n\n      expect(tokenId).toBeDefined();\n      expect(mintedMetadata).toBeDefined();\n      expect(mintedMetadata).toHaveLength(1);\n      expect(mintedMetadata).toEqual(\n        expect.arrayContaining(\n          Array(1).fill({\n            content: 'www.youtube.com',\n            serialNumber: expect.any(Number),\n          })\n        )\n      );\n\n      for (const metaData of mintedMetadata) {\n        const nftInfos = await new TokenNftInfoQuery()\n          .setNftId(new NftId(TokenId.fromString(tokenId), metaData.serialNumber))\n          .execute(nftSDK.client);\n\n        expect(nftInfos[0].metadata!.toString()).toEqual('www.youtube.com');\n      }\n    },\n    LONG_E2E_TIMEOUT\n  );\n\n  it(\n    'Creating a token and minting 8 NFTs into it with batchSize 5',\n    async () => {\n      const tokenId = await nftSDK.createCollection({\n        collectionName: 'test_name',\n        collectionSymbol: 'test_symbol',\n      });\n      const mintedMetadata = await nftSDK.mintSharedMetadata({\n        tokenId,\n        amount: 1,\n        batchSize: 5,\n        metaData: 'www.youtube.com',\n      });\n\n      expect(tokenId).toBeDefined();\n      expect(mintedMetadata).toBeDefined();\n      expect(mintedMetadata).toHaveLength(1);\n      expect(mintedMetadata).toEqual(\n        expect.arrayContaining(\n          Array(1).fill({\n            content: 'www.youtube.com',\n            serialNumber: expect.any(Number),\n          })\n        )\n      );\n\n      for (const metaData of mintedMetadata) {\n        const nftInfos = await new TokenNftInfoQuery()\n          .setNftId(new NftId(TokenId.fromString(tokenId), metaData.serialNumber))\n          .execute(nftSDK.client);\n\n        expect(nftInfos[0].metadata!.toString()).toEqual('www.youtube.com');\n      }\n    },\n    LONG_E2E_TIMEOUT\n  );\n});\n"],"mappings":"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","ignoreList":[]}