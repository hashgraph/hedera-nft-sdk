{"version":3,"file":"csv-file-reader.test.js","names":["_fs","_interopRequireDefault","require","_csvFileReader","_stream","obj","__esModule","default","jest","mock","describe","filePath","afterEach","resetAllMocks","it","mockData","header1","header2","mockStream","Readable","read","push","fs","createReadStream","mockReturnValue","result","readCSVFile","expect","toEqual"],"sources":["../../../../../src/test/unit/metadata/csv-file-reader.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport fs from 'fs';\nimport { readCSVFile } from '../../../services/csv-file-reader';\nimport { CSVRow } from '../../../types/csv';\nimport { Readable } from 'stream';\n\njest.mock('fs');\n\ndescribe('CSVFileReader', () => {\n  const filePath = 'example.csv';\n\n  afterEach(() => {\n    jest.resetAllMocks();\n  });\n\n  it('should read a CSV file correctly', async () => {\n    const mockData: CSVRow[] = [\n      { header1: 'value1', header2: 'value2' },\n      { header1: 'value3', header2: 'value4' },\n    ];\n\n    const mockStream = new Readable({\n      read() {\n        this.push('header1,header2\\nvalue1,value2\\nvalue3,value4');\n        this.push(null);\n      },\n    });\n\n    (fs.createReadStream as jest.Mock).mockReturnValue(mockStream);\n\n    const result = await readCSVFile(filePath);\n    expect(result).toEqual(mockData);\n  });\n});\n"],"mappings":";;AAmBA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,cAAA,GAAAD,OAAA;AAEA,IAAAE,OAAA,GAAAF,OAAA;AAAkC,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAtBlC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMAG,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;AAEfC,QAAQ,CAAC,eAAe,EAAE,MAAM;EAC9B,MAAMC,QAAQ,GAAG,aAAa;EAE9BC,SAAS,CAAC,MAAM;IACdJ,IAAI,CAACK,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,EAAE,CAAC,kCAAkC,EAAE,YAAY;IACjD,MAAMC,QAAkB,GAAG,CACzB;MAAEC,OAAO,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAS,CAAC,EACxC;MAAED,OAAO,EAAE,QAAQ;MAAEC,OAAO,EAAE;IAAS,CAAC,CACzC;IAED,MAAMC,UAAU,GAAG,IAAIC,gBAAQ,CAAC;MAC9BC,IAAIA,CAAA,EAAG;QACL,IAAI,CAACC,IAAI,CAAC,+CAA+C,CAAC;QAC1D,IAAI,CAACA,IAAI,CAAC,IAAI,CAAC;MACjB;IACF,CAAC,CAAC;IAEDC,WAAE,CAACC,gBAAgB,CAAeC,eAAe,CAACN,UAAU,CAAC;IAE9D,MAAMO,MAAM,GAAG,MAAM,IAAAC,0BAAW,EAACf,QAAQ,CAAC;IAC1CgB,MAAM,CAACF,MAAM,CAAC,CAACG,OAAO,CAACb,QAAQ,CAAC;EAClC,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}