{"version":3,"file":"hip412-metadata-builder.test.js","names":["_hip412MetadataBuilder","require","MOCKED_NAME","MOCKED_IMAGE","MOCKED_TYPE","MOCKED_ATTRIBUTES_ALL_PARAMS","trait_type","value","display_type","max_value","MOCKED_ATTRIBUTES_REQUIRED_PARAMS","MOCKED_CREATOR","MOCKED_CREATOR_DID","MOCKED_DESCRIPTION","MOCKED_CHECKSUM","MOCKED_NESTED_METADATA","name","creator","description","image","type","properties","external_url","url","attributes","MOCKED_FILE_ALL_PARAMS","uri","is_default_file","metadata","metadata_uri","MOCKED_FILE_REQUIRED_PARAMS","MOCKED_PROPERTY_1","key","MOCKED_PROPERTY_2","MOCKED_PROPERTY_3","MOCKED_LOCALIZATION","default","locales","describe","it","builder","Hip412MetadataBuilder","setName","setImage","setType","result","build","expect","toEqual","validationResult","isValid","toBe","errors","length","addAttribute","setCreator","setCreatorDID","setDescription","setChecksum","addFile","addProperty","setLocalization","toBeDefined","creatorDID","checksum","files","localization"],"sources":["../../../../src/test/unit/hip412-metadata-builder.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Hip412MetadataBuilder } from '../../hip412-metadata-builder';\n\nconst MOCKED_NAME = 'Test NFT';\nconst MOCKED_IMAGE = 'https://example.com/nft.png';\nconst MOCKED_TYPE = 'image/png';\nconst MOCKED_ATTRIBUTES_ALL_PARAMS = { trait_type: 'color', value: 'red', display_type: 'percentage', max_value: 100 };\nconst MOCKED_ATTRIBUTES_REQUIRED_PARAMS = { trait_type: 'character', value: 'angry' };\nconst MOCKED_CREATOR = 'example_creator';\nconst MOCKED_CREATOR_DID = 'example_creator_did';\nconst MOCKED_DESCRIPTION = 'Example description lorem ipsum dolor sit amet';\nconst MOCKED_CHECKSUM = '9defbb6402d4bf39f2ea580099c73194647b24a659b6f6b778e3dd71755b8862';\nconst MOCKED_NESTED_METADATA = {\n  name: 'Example NFT 4',\n  creator: 'Hedera',\n  description: 'This is an example NFT 4',\n  image: 'https://nft.com/mycollection/4.jpg',\n  type: 'image/jpeg',\n  properties: {\n    external_url: 'https://nft.com/mycollection/4',\n    url: 'https://nft.com/mycollection/4',\n  },\n  attributes: [\n    { trait_type: 'color', value: 'rgb(0,255,0)', display_type: 'boolean' },\n    { trait_type: 'hasPipe', value: 'false' },\n    { trait_type: 'stamina', value: '55' },\n  ],\n};\nconst MOCKED_FILE_ALL_PARAMS = {\n  uri: 'https://example-11.com/high-res.png',\n  type: 'image/png',\n  is_default_file: true,\n  metadata: MOCKED_NESTED_METADATA,\n  metadata_uri: 'example_metadata_uri',\n};\nconst MOCKED_FILE_REQUIRED_PARAMS = {\n  uri: 'https://example-22.com/high-res.png',\n  type: 'image/gif',\n};\nconst MOCKED_PROPERTY_1 = { key: 'example_key_1', value: 'example_value_1' };\nconst MOCKED_PROPERTY_2 = { key: 'example_key_2', value: 'example_value_2' };\nconst MOCKED_PROPERTY_3 = { key: 'example_key_3', value: 'example_value_3' };\nconst MOCKED_LOCALIZATION = {\n  uri: 'example_uri',\n  default: 'en',\n  locales: ['en', 'pl'],\n};\n\ndescribe('Hip412MetadataBuilder', () => {\n  it('should create metadata with only required fields: name, image, and type', () => {\n    const builder = new Hip412MetadataBuilder().setName(MOCKED_NAME).setImage(MOCKED_IMAGE).setType(MOCKED_TYPE);\n    const result = builder.build();\n\n    expect(result.metadata.name).toEqual(MOCKED_NAME);\n    expect(result.metadata.image).toEqual(MOCKED_IMAGE);\n    expect(result.metadata.type).toEqual(MOCKED_TYPE);\n    expect(result.validationResult.isValid).toBe(true);\n    expect(result.validationResult.errors.length).toEqual(0);\n  });\n\n  it('should return one validation error when there is no name field provided for metadata object', () => {\n    const builder = new Hip412MetadataBuilder().setImage(MOCKED_IMAGE).setType(MOCKED_TYPE);\n    const result = builder.build();\n\n    expect(result.metadata.name).toEqual('');\n    expect(result.metadata.image).toEqual(MOCKED_IMAGE);\n    expect(result.metadata.type).toEqual(MOCKED_TYPE);\n    expect(result.validationResult.isValid).toBe(false);\n    expect(result.validationResult.errors.length).toEqual(1);\n  });\n\n  it('should return three validation errors when none of the required fields are provided', () => {\n    const builder = new Hip412MetadataBuilder();\n    const result = builder.build();\n\n    expect(result.metadata.name).toEqual('');\n    expect(result.metadata.image).toEqual('');\n    expect(result.metadata.type).toEqual('');\n    expect(result.validationResult.isValid).toBe(false);\n    expect(result.validationResult.errors.length).toEqual(3);\n  });\n\n  it('should return a full metadata object with all fields filled', () => {\n    const builder = new Hip412MetadataBuilder()\n      .setName(MOCKED_NAME)\n      .setImage(MOCKED_IMAGE)\n      .setType(MOCKED_TYPE)\n      .addAttribute(MOCKED_ATTRIBUTES_ALL_PARAMS)\n      .addAttribute(MOCKED_ATTRIBUTES_REQUIRED_PARAMS)\n      .setCreator(MOCKED_CREATOR)\n      .setCreatorDID(MOCKED_CREATOR_DID)\n      .setDescription(MOCKED_DESCRIPTION)\n      .setChecksum(MOCKED_CHECKSUM)\n      .addFile(MOCKED_FILE_ALL_PARAMS)\n      .addFile(MOCKED_FILE_REQUIRED_PARAMS)\n      .addProperty(MOCKED_PROPERTY_1)\n      .addProperty(MOCKED_PROPERTY_2)\n      .addProperty(MOCKED_PROPERTY_3)\n      .setLocalization(MOCKED_LOCALIZATION);\n\n    const result = builder.build();\n\n    expect(result.metadata.name).toEqual(MOCKED_NAME);\n    expect(result.metadata.image).toEqual(MOCKED_IMAGE);\n    expect(result.metadata.type).toEqual(MOCKED_TYPE);\n    expect(result.metadata.attributes).toBeDefined();\n    expect(result.metadata.attributes?.length).toEqual(2);\n    expect(result.metadata.attributes?.[0]).toEqual(MOCKED_ATTRIBUTES_ALL_PARAMS);\n    expect(result.metadata.attributes?.[1]).toEqual(MOCKED_ATTRIBUTES_REQUIRED_PARAMS);\n    expect(result.metadata.creator).toEqual(MOCKED_CREATOR);\n    expect(result.metadata.creatorDID).toEqual(MOCKED_CREATOR_DID);\n    expect(result.metadata.description).toEqual(MOCKED_DESCRIPTION);\n    expect(result.metadata.checksum).toEqual(MOCKED_CHECKSUM);\n    expect(result.metadata.files).toBeDefined();\n    expect(result.metadata.files?.length).toEqual(2);\n    expect(result.metadata.files?.[0]).toEqual(MOCKED_FILE_ALL_PARAMS);\n    expect(result.metadata.files?.[1]).toEqual(MOCKED_FILE_REQUIRED_PARAMS);\n    expect(result.metadata.properties).toBeDefined();\n    expect(result.metadata.properties?.[MOCKED_PROPERTY_1.key]).toEqual(MOCKED_PROPERTY_1.value);\n    expect(result.metadata.properties?.[MOCKED_PROPERTY_2.key]).toEqual(MOCKED_PROPERTY_2.value);\n    expect(result.metadata.properties?.[MOCKED_PROPERTY_3.key]).toEqual(MOCKED_PROPERTY_3.value);\n    expect(result.metadata.localization).toEqual(MOCKED_LOCALIZATION);\n    expect(result.validationResult.isValid).toBe(true);\n    expect(result.validationResult.errors.length).toEqual(0);\n  });\n});\n"],"mappings":"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","ignoreList":[]}