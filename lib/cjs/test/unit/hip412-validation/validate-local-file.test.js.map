{"version":3,"file":"validate-local-file.test.js","names":["_fs","_interopRequireDefault","require","_tokenMetadataValidator","_dictionary","obj","__esModule","default","jest","mock","mockReadFileSync","fs","readFileSync","describe","beforeEach","resetAllMocks","it","mockImplementation","Error","dictionary","validation","filePermissionDenied","validationResult","TokenMetadataValidator","validateLocalFile","expect","isValid","toBe","errors","toContain","fileEmptyOrFormattingError","toEqual","mockReturnValue","validJson","JSON","stringify","name","image","type","toHaveLength"],"sources":["../../../../../src/test/unit/hip412-validation/validate-local-file.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport fs from 'fs';\nimport { TokenMetadataValidator } from '../../../token-metadata-validator';\nimport { dictionary } from '../../../utils/constants/dictionary';\n\njest.mock('fs');\nconst mockReadFileSync = fs.readFileSync as jest.Mock;\n\ndescribe('TokenMetadataValidator.validateLocalFile', () => {\n  beforeEach(() => {\n    jest.resetAllMocks();\n  });\n\n  it('should throw errors during file reading without permissions', () => {\n    mockReadFileSync.mockImplementation(() => {\n      throw new Error(dictionary.validation.filePermissionDenied);\n    });\n    const validationResult = TokenMetadataValidator.validateLocalFile('mockPath.json');\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toContain(dictionary.validation.filePermissionDenied);\n  });\n\n  it('should handle JSON files with formatting errors', () => {\n    mockReadFileSync.mockImplementation(() => {\n      throw new Error(dictionary.validation.fileEmptyOrFormattingError);\n    });\n    const validationResult = TokenMetadataValidator.validateLocalFile('mockPath.json');\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toEqual([dictionary.validation.fileEmptyOrFormattingError]);\n  });\n\n  it('should handle empty or non-existent JSON files', () => {\n    mockReadFileSync.mockReturnValue('');\n    const validationResult = TokenMetadataValidator.validateLocalFile('path/to/empty.json');\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toEqual([dictionary.validation.fileEmptyOrFormattingError]);\n  });\n\n  it('should validate correctly structured JSON file', () => {\n    const validJson = JSON.stringify({\n      name: 'Example NFT',\n      image: 'https://example.com/nft.jpg',\n      type: 'image/jpeg',\n    });\n    mockReadFileSync.mockReturnValue(validJson);\n    const validationResult = TokenMetadataValidator.validateLocalFile('path/to/valid.json');\n    expect(validationResult.isValid).toBe(true);\n    expect(validationResult.errors).toHaveLength(0);\n  });\n});\n"],"mappings":";;AAmBA,IAAAA,GAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAD,OAAA;AACA,IAAAE,WAAA,GAAAF,OAAA;AAAiE,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AArBjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAKAG,IAAI,CAACC,IAAI,CAAC,IAAI,CAAC;AACf,MAAMC,gBAAgB,GAAGC,WAAE,CAACC,YAAyB;AAErDC,QAAQ,CAAC,0CAA0C,EAAE,MAAM;EACzDC,UAAU,CAAC,MAAM;IACfN,IAAI,CAACO,aAAa,CAAC,CAAC;EACtB,CAAC,CAAC;EAEFC,EAAE,CAAC,6DAA6D,EAAE,MAAM;IACtEN,gBAAgB,CAACO,kBAAkB,CAAC,MAAM;MACxC,MAAM,IAAIC,KAAK,CAACC,sBAAU,CAACC,UAAU,CAACC,oBAAoB,CAAC;IAC7D,CAAC,CAAC;IACF,MAAMC,gBAAgB,GAAGC,8CAAsB,CAACC,iBAAiB,CAAC,eAAe,CAAC;IAClFC,MAAM,CAACH,gBAAgB,CAACI,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC5CF,MAAM,CAACH,gBAAgB,CAACM,MAAM,CAAC,CAACC,SAAS,CAACV,sBAAU,CAACC,UAAU,CAACC,oBAAoB,CAAC;EACvF,CAAC,CAAC;EAEFL,EAAE,CAAC,iDAAiD,EAAE,MAAM;IAC1DN,gBAAgB,CAACO,kBAAkB,CAAC,MAAM;MACxC,MAAM,IAAIC,KAAK,CAACC,sBAAU,CAACC,UAAU,CAACU,0BAA0B,CAAC;IACnE,CAAC,CAAC;IACF,MAAMR,gBAAgB,GAAGC,8CAAsB,CAACC,iBAAiB,CAAC,eAAe,CAAC;IAClFC,MAAM,CAACH,gBAAgB,CAACI,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC5CF,MAAM,CAACH,gBAAgB,CAACM,MAAM,CAAC,CAACG,OAAO,CAAC,CAACZ,sBAAU,CAACC,UAAU,CAACU,0BAA0B,CAAC,CAAC;EAC7F,CAAC,CAAC;EAEFd,EAAE,CAAC,gDAAgD,EAAE,MAAM;IACzDN,gBAAgB,CAACsB,eAAe,CAAC,EAAE,CAAC;IACpC,MAAMV,gBAAgB,GAAGC,8CAAsB,CAACC,iBAAiB,CAAC,oBAAoB,CAAC;IACvFC,MAAM,CAACH,gBAAgB,CAACI,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC5CF,MAAM,CAACH,gBAAgB,CAACM,MAAM,CAAC,CAACG,OAAO,CAAC,CAACZ,sBAAU,CAACC,UAAU,CAACU,0BAA0B,CAAC,CAAC;EAC7F,CAAC,CAAC;EAEFd,EAAE,CAAC,gDAAgD,EAAE,MAAM;IACzD,MAAMiB,SAAS,GAAGC,IAAI,CAACC,SAAS,CAAC;MAC/BC,IAAI,EAAE,aAAa;MACnBC,KAAK,EAAE,6BAA6B;MACpCC,IAAI,EAAE;IACR,CAAC,CAAC;IACF5B,gBAAgB,CAACsB,eAAe,CAACC,SAAS,CAAC;IAC3C,MAAMX,gBAAgB,GAAGC,8CAAsB,CAACC,iBAAiB,CAAC,oBAAoB,CAAC;IACvFC,MAAM,CAACH,gBAAgB,CAACI,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC3CF,MAAM,CAACH,gBAAgB,CAACM,MAAM,CAAC,CAACW,YAAY,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}