{"version":3,"file":"validate-single-metadata-object.test.js","names":["_dictionary","require","_tokenMetadataValidator","METADATA_OBJECT_WITH_ONLY_REQUIRED_FIELDS","name","image","type","METADATA_OBJECT_WITH_ONE_REQUIRED_FIELD_MISSING","METADATA_OBJECT_WITH_TWO_REQUIRED_FIELDS_MISSING","METADATA_OBECT_WITH_ALL_FIELDS","creator","description","properties","external_url","url","attributes","trait_type","value","METADATA_OBJECT_WITH_INVALID_IMAGE_TYPE","METADATA_OBJECT_WITH_INVALID_ATTRIBUTES_STRUCTURE","validate","metadataObject","TokenMetadataValidator","validateSingleMetadataObject","describe","it","validationResult","expect","isValid","toBe","errors","toHaveLength","toEqual","dictionary","validation","requiredTypeFieldIsMissing","requiredAttributeFieldMissing"],"sources":["../../../../../src/test/unit/hip412-validation/validate-single-metadata-object.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { dictionary } from '../../../utils/constants/dictionary';\nimport { TokenMetadataValidator } from '../../../token-metadata-validator';\nimport { MetadataObject } from '../../../types/csv';\n\nconst METADATA_OBJECT_WITH_ONLY_REQUIRED_FIELDS = {\n  name: 'Example NFT 1',\n  image: 'https://nft.com/mycollection/1.jpg',\n  type: 'image/jpeg',\n};\n\nconst METADATA_OBJECT_WITH_ONE_REQUIRED_FIELD_MISSING = {\n  name: 'Example NFT 1',\n  type: 'image/jpeg',\n};\n\nconst METADATA_OBJECT_WITH_TWO_REQUIRED_FIELDS_MISSING = {\n  name: 'Example NFT 1',\n};\n\nconst METADATA_OBECT_WITH_ALL_FIELDS = {\n  name: 'Example NFT 1',\n  creator: 'Hedera',\n  description: 'This is an example NFT 1',\n  image: 'https://nft.com/mycollection/1.jpg',\n  type: 'image/jpeg',\n  properties: {\n    external_url: 'https://nft.com/mycollection/1',\n    url: 'https://nft.com/mycollection/1',\n  },\n  attributes: [\n    { trait_type: 'color', value: 'rgb(0,255,0)' },\n    { trait_type: 'hasPipe', value: 'false' },\n    { trait_type: 'stamina', value: '65' },\n  ],\n};\n\nconst METADATA_OBJECT_WITH_INVALID_IMAGE_TYPE = {\n  name: 'Example NFT 1',\n  image: 'https://nft.com/mycollection/1.jpg',\n  type: 'text/plain',\n};\n\nconst METADATA_OBJECT_WITH_INVALID_ATTRIBUTES_STRUCTURE = {\n  name: 'Example NFT 1',\n  creator: 'Hedera',\n  description: 'This is an example NFT 1',\n  image: 'https://nft.com/mycollection/1.jpg',\n  type: 'image/jpeg',\n  properties: {\n    external_url: 'https://nft.com/mycollection/1',\n    url: 'https://nft.com/mycollection/1',\n  },\n  attributes: 'This is not a valid attributes structure',\n};\n\nconst validate = (metadataObject: MetadataObject) => {\n  return TokenMetadataValidator.validateSingleMetadataObject(metadataObject);\n};\n\ndescribe('TokenMetadataValidator.validateSingleObject', () => {\n  it('should not return any errors for an object with all fields filled properly', () => {\n    const validationResult = validate(METADATA_OBECT_WITH_ALL_FIELDS);\n    expect(validationResult.isValid).toBe(true);\n    expect(validationResult.errors).toHaveLength(0);\n  });\n\n  it('should not return any errors for an object with only required fields filled', () => {\n    const validationResult = validate(METADATA_OBJECT_WITH_ONLY_REQUIRED_FIELDS);\n    expect(validationResult.isValid).toBe(true);\n    expect(validationResult.errors).toHaveLength(0);\n  });\n\n  it('should return one error for an object missing the image field', () => {\n    const validationResult = validate(METADATA_OBJECT_WITH_ONE_REQUIRED_FIELD_MISSING);\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toHaveLength(1);\n  });\n\n  it('should return two errors for an object missing the image and type field', () => {\n    const validationResult = validate(METADATA_OBJECT_WITH_TWO_REQUIRED_FIELDS_MISSING);\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toHaveLength(2);\n  });\n\n  it('should return an error for an object with an invalid image MIME type', () => {\n    const validationResult = validate(METADATA_OBJECT_WITH_INVALID_IMAGE_TYPE);\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toEqual([dictionary.validation.requiredTypeFieldIsMissing]);\n  });\n\n  it('should return an error for an object with an invalid attributes structure', () => {\n    const validationResult = validate(METADATA_OBJECT_WITH_INVALID_ATTRIBUTES_STRUCTURE);\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toEqual([dictionary.validation.requiredAttributeFieldMissing]);\n  });\n});\n"],"mappings":"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","ignoreList":[]}