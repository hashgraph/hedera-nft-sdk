{"version":3,"file":"validate-single-on-chain-nft-metadata.test.js","names":["_axios","_interopRequireDefault","require","_tokenMetadataValidator","_consts","obj","__esModule","default","encodedMetadata","btoa","JSON","stringify","MOCKED_NFT_RESPONSE","account_id","created_timestamp","delegating_spender","deleted","metadata","modified_timestamp","serial_number","spender","token_id","VALID_NFT_METADATA","name","creator","description","image","type","properties","external_url","url","attributes","trait_type","value","NFT_METADATA_WITH_MISSING_REQUIRED_FIELDS","jest","mock","mockedAxios","axios","describe","beforeEach","get","mockReset","it","mockResolvedValueOnce","data","validationResult","TokenMetadataValidator","validateSingleOnChainNFTMetadata","NETWORK","EXAMPLE_IPFS_GATEWAY","expect","isValid","toBe","errors","toHaveLength"],"sources":["../../../../src/test/integration/validate-single-on-chain-nft-metadata.test.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport axios from 'axios';\nimport { NFTDetails } from '../../types/nfts';\nimport { TokenMetadataValidator } from '../../token-metadata-validator';\nimport { EXAMPLE_IPFS_GATEWAY } from '../__mocks__/consts';\nimport { NETWORK } from '../__mocks__/consts';\n\nconst encodedMetadata = btoa(JSON.stringify('https://link-to-example-metadata.com'));\n\nconst MOCKED_NFT_RESPONSE: NFTDetails = {\n  account_id: '0.0.1638',\n  created_timestamp: '1708435543.303452003',\n  delegating_spender: null,\n  deleted: false,\n  metadata: encodedMetadata,\n  modified_timestamp: '1708435543.303452003',\n  serial_number: 1,\n  spender: null,\n  token_id: '0.0.3573355',\n};\n\nconst VALID_NFT_METADATA = {\n  name: 'Example NFT 2',\n  creator: 'Hedera',\n  description: 'This is an example NFT 2',\n  image: 'https://nft.com/mycollection/2.jpg',\n  type: 'image/jpeg',\n  properties: {\n    external_url: 'https://nft.com/mycollection/2',\n    url: 'https://nft.com/mycollection/2',\n  },\n  attributes: [\n    { trait_type: 'color', value: 'rgb(255,0,0)' },\n    { trait_type: 'hasPipe', value: 'true' },\n    { trait_type: 'stamina', value: '83' },\n  ],\n};\n\nconst NFT_METADATA_WITH_MISSING_REQUIRED_FIELDS = {\n  creator: 'Hedera',\n  description: 'This is an example NFT 2',\n  properties: {\n    external_url: 'https://nft.com/mycollection/2',\n    url: 'https://nft.com/mycollection/2',\n  },\n  attributes: [\n    { trait_type: 'color', value: 'rgb(255,0,0)' },\n    { trait_type: 'hasPipe', value: 'true' },\n    { trait_type: 'stamina', value: '83' },\n  ],\n};\n\njest.mock('axios');\nconst mockedAxios = axios as jest.Mocked<typeof axios>;\n\ndescribe('validateSingleOnChainNFTMetadata', () => {\n  beforeEach(() => {\n    mockedAxios.get.mockReset();\n  });\n\n  it('validates single NFT metadata successfully', async () => {\n    mockedAxios.get.mockResolvedValueOnce({ data: MOCKED_NFT_RESPONSE }).mockResolvedValueOnce({ data: VALID_NFT_METADATA });\n\n    const validationResult = await TokenMetadataValidator.validateSingleOnChainNFTMetadata(NETWORK, '0.0.3573355', 1, EXAMPLE_IPFS_GATEWAY);\n\n    expect(validationResult.isValid).toBe(true);\n    expect(validationResult.errors).toHaveLength(0);\n  });\n\n  it('validates single NFT metadata and shows errors about missing fields in metadata object', async () => {\n    mockedAxios.get\n      .mockResolvedValueOnce({ data: MOCKED_NFT_RESPONSE })\n      .mockResolvedValueOnce({ data: NFT_METADATA_WITH_MISSING_REQUIRED_FIELDS });\n\n    const validationResult = await TokenMetadataValidator.validateSingleOnChainNFTMetadata(NETWORK, '0.0.3573355', 1, EXAMPLE_IPFS_GATEWAY);\n\n    expect(validationResult.isValid).toBe(false);\n    expect(validationResult.errors).toHaveLength(3);\n  });\n});\n"],"mappings":";;AAmBA,IAAAA,MAAA,GAAAC,sBAAA,CAAAC,OAAA;AAEA,IAAAC,uBAAA,GAAAD,OAAA;AACA,IAAAE,OAAA,GAAAF,OAAA;AAA2D,SAAAD,uBAAAI,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAtB3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAOA,MAAMG,eAAe,GAAGC,IAAI,CAACC,IAAI,CAACC,SAAS,CAAC,sCAAsC,CAAC,CAAC;AAEpF,MAAMC,mBAA+B,GAAG;EACtCC,UAAU,EAAE,UAAU;EACtBC,iBAAiB,EAAE,sBAAsB;EACzCC,kBAAkB,EAAE,IAAI;EACxBC,OAAO,EAAE,KAAK;EACdC,QAAQ,EAAET,eAAe;EACzBU,kBAAkB,EAAE,sBAAsB;EAC1CC,aAAa,EAAE,CAAC;EAChBC,OAAO,EAAE,IAAI;EACbC,QAAQ,EAAE;AACZ,CAAC;AAED,MAAMC,kBAAkB,GAAG;EACzBC,IAAI,EAAE,eAAe;EACrBC,OAAO,EAAE,QAAQ;EACjBC,WAAW,EAAE,0BAA0B;EACvCC,KAAK,EAAE,oCAAoC;EAC3CC,IAAI,EAAE,YAAY;EAClBC,UAAU,EAAE;IACVC,YAAY,EAAE,gCAAgC;IAC9CC,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE,CACV;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAe,CAAC,EAC9C;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAO,CAAC,EACxC;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAK,CAAC;AAE1C,CAAC;AAED,MAAMC,yCAAyC,GAAG;EAChDV,OAAO,EAAE,QAAQ;EACjBC,WAAW,EAAE,0BAA0B;EACvCG,UAAU,EAAE;IACVC,YAAY,EAAE,gCAAgC;IAC9CC,GAAG,EAAE;EACP,CAAC;EACDC,UAAU,EAAE,CACV;IAAEC,UAAU,EAAE,OAAO;IAAEC,KAAK,EAAE;EAAe,CAAC,EAC9C;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAO,CAAC,EACxC;IAAED,UAAU,EAAE,SAAS;IAAEC,KAAK,EAAE;EAAK,CAAC;AAE1C,CAAC;AAEDE,IAAI,CAACC,IAAI,CAAC,OAAO,CAAC;AAClB,MAAMC,WAAW,GAAGC,cAAkC;AAEtDC,QAAQ,CAAC,kCAAkC,EAAE,MAAM;EACjDC,UAAU,CAAC,MAAM;IACfH,WAAW,CAACI,GAAG,CAACC,SAAS,CAAC,CAAC;EAC7B,CAAC,CAAC;EAEFC,EAAE,CAAC,4CAA4C,EAAE,YAAY;IAC3DN,WAAW,CAACI,GAAG,CAACG,qBAAqB,CAAC;MAAEC,IAAI,EAAEjC;IAAoB,CAAC,CAAC,CAACgC,qBAAqB,CAAC;MAAEC,IAAI,EAAEvB;IAAmB,CAAC,CAAC;IAExH,MAAMwB,gBAAgB,GAAG,MAAMC,8CAAsB,CAACC,gCAAgC,CAACC,eAAO,EAAE,aAAa,EAAE,CAAC,EAAEC,4BAAoB,CAAC;IAEvIC,MAAM,CAACL,gBAAgB,CAACM,OAAO,CAAC,CAACC,IAAI,CAAC,IAAI,CAAC;IAC3CF,MAAM,CAACL,gBAAgB,CAACQ,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;EAEFZ,EAAE,CAAC,wFAAwF,EAAE,YAAY;IACvGN,WAAW,CAACI,GAAG,CACZG,qBAAqB,CAAC;MAAEC,IAAI,EAAEjC;IAAoB,CAAC,CAAC,CACpDgC,qBAAqB,CAAC;MAAEC,IAAI,EAAEX;IAA0C,CAAC,CAAC;IAE7E,MAAMY,gBAAgB,GAAG,MAAMC,8CAAsB,CAACC,gCAAgC,CAACC,eAAO,EAAE,aAAa,EAAE,CAAC,EAAEC,4BAAoB,CAAC;IAEvIC,MAAM,CAACL,gBAAgB,CAACM,OAAO,CAAC,CAACC,IAAI,CAAC,KAAK,CAAC;IAC5CF,MAAM,CAACL,gBAAgB,CAACQ,MAAM,CAAC,CAACC,YAAY,CAAC,CAAC,CAAC;EACjD,CAAC,CAAC;AACJ,CAAC,CAAC","ignoreList":[]}