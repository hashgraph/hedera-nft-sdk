{"version":3,"file":"consts.js","names":["_sdk","require","myAccountId","exports","mySecondAccountId","myPrivateKey","PrivateKey","generateED25519","mySecondPrivateKey","treasuryAccountPrivateKey","pathToOneLineCSV","pathToRowCSV","CSV_EXAMPLE_INVALID_HEADERS","CSV_EXAMPLE_NO_IMAGES","CSV_EXAMPLE_ONLY_REQUIRED_FIELDS","CSV_EXAMPLE_WITH_ALL_FIELDS","CSV_EXAMPLE_WITH_MISSING_REQUIRED_FIELDS","CSV_EXAMPLE_ONLY_REQUIRED_FIELDS_AND_HEADERS","CSV_EXAMPLE_EMPTY_FILE","CSV_EXAMPLE_WITH_HEADERS_ONLY","JSON_METADATA_INTEGRATION_TESTS_OUTPUT_FOLDER_PATH","JSON_METADATA_UNIT_TESTS_OUTPUT_METADATA_FOLDER_PATH","JSON_METADATA_UNIT_TESTS_OUTPUT_NEW_METADATA_FOLDER_PATH","EMPTY_JSON_DIRECTORY_PATH","NON_EMPTY_JSON_DIRECTORY_PATH","FILES_WITH_MIXED_EXTENSION_PATH","EMPTY_JSON_EXAMPLE_PATH","CORRECT_EXAMPLE_PATH","LONG_E2E_TIMEOUT","MIRROR_NODE_DELAY","LONG_MIRROR_NODE_DELAY","NFT_FROM_TOKEN_EXAMPLE_BASE_URL","NETWORK_ERROR","EXAMPLE_IPFS_GATEWAY","IPFS_PREFIXED_HASH","HASH_WITHOUT_IPFS_PREFIX","HTTPS_URL","NETWORK","MOCK_CLIENT","MOCK_META_DATA","MOCK_TOKEN_ID","MOCK_SERIAL","MOCK_SUPPLY_KEY"],"sources":["../../../../src/test/__mocks__/consts.ts"],"sourcesContent":["import { Client, PrivateKey } from '@hashgraph/sdk';\n\n/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nexport const myAccountId = '0.0.12345';\nexport const mySecondAccountId = '0.0.123';\nexport const myPrivateKey = PrivateKey.generateED25519();\nexport const mySecondPrivateKey = PrivateKey.generateED25519();\nexport const treasuryAccountPrivateKey = PrivateKey.generateED25519();\n\nexport const pathToOneLineCSV = 'src/test/__mocks__/csv/csv-example-one-line.csv';\nexport const pathToRowCSV = 'src/test/__mocks__/csv/csv-example-rows.csv';\nexport const CSV_EXAMPLE_INVALID_HEADERS = 'src/test/__mocks__/csv/csv-example-invalid-headers.csv';\nexport const CSV_EXAMPLE_NO_IMAGES = 'src/test/__mocks__/csv/csv-example-no-images.csv';\nexport const CSV_EXAMPLE_ONLY_REQUIRED_FIELDS = 'src/test/__mocks__/csv/csv-example-only-required-fields.csv';\nexport const CSV_EXAMPLE_WITH_ALL_FIELDS = 'src/test/__mocks__/csv/csv-example-with-all-fields.csv';\nexport const CSV_EXAMPLE_WITH_MISSING_REQUIRED_FIELDS = 'src/test/__mocks__/csv/csv-example-with-missing-required-fields.csv';\nexport const CSV_EXAMPLE_ONLY_REQUIRED_FIELDS_AND_HEADERS = 'src/test/__mocks__/csv/csv-example-only-required-fields-and-headers.csv';\nexport const CSV_EXAMPLE_EMPTY_FILE = 'src/test/__mocks__/csv/csv-example-empty-file.csv';\nexport const CSV_EXAMPLE_WITH_HEADERS_ONLY = 'src/test/__mocks__/csv/csv-example-with-headers-only.csv';\n\nexport const JSON_METADATA_INTEGRATION_TESTS_OUTPUT_FOLDER_PATH = 'src/test/integration/output';\nexport const JSON_METADATA_UNIT_TESTS_OUTPUT_METADATA_FOLDER_PATH = 'src/test/unit/output/metadata';\nexport const JSON_METADATA_UNIT_TESTS_OUTPUT_NEW_METADATA_FOLDER_PATH = 'src/test/unit/output/newMetadata';\n\nexport const EMPTY_JSON_DIRECTORY_PATH = 'src/test/__mocks__/json/empty-json-directory';\nexport const NON_EMPTY_JSON_DIRECTORY_PATH = 'src/test/__mocks__/json/non-empty-json-directory';\nexport const FILES_WITH_MIXED_EXTENSION_PATH = 'src/test/__mocks__/json/files-with-mixed-extensions';\n\nexport const EMPTY_JSON_EXAMPLE_PATH = 'src/test/__mocks__/json/empty-example.json';\nexport const CORRECT_EXAMPLE_PATH = 'src/test/__mocks__/json/correct-example.json';\n\nexport const LONG_E2E_TIMEOUT = 55000;\nexport const MIRROR_NODE_DELAY = 5000;\nexport const LONG_MIRROR_NODE_DELAY = 10000;\n\nexport const NFT_FROM_TOKEN_EXAMPLE_BASE_URL = 'http://example.com';\nexport const NETWORK_ERROR = 'Network error';\n\nexport const EXAMPLE_IPFS_GATEWAY = 'https://myipfsgateway.example.com/ipfs/';\n\nexport const IPFS_PREFIXED_HASH = 'ipfs://QmSomeHash';\nexport const HASH_WITHOUT_IPFS_PREFIX = 'QmAnotherHash';\nexport const HTTPS_URL = 'https://example.com/metadata.json';\n\nexport const NETWORK = 'testnet';\n\nexport const MOCK_CLIENT = {} as Client;\nexport const MOCK_META_DATA = 'meta1';\nexport const MOCK_TOKEN_ID = '0.0.123';\nexport const MOCK_SERIAL = 2;\nexport const MOCK_SUPPLY_KEY = myPrivateKey;\n"],"mappings":"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","ignoreList":[]}