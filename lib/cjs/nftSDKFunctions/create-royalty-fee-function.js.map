{"version":3,"file":"create-royalty-fee-function.js","names":["_sdk","require","_createFixedFeeFunction","_validateProps","createRoyaltyFeeFunction","_ref","collectorAccountId","numerator","denominator","fallbackFee","allCollectorsAreExempt","validatePropsForRoyaltyFeeFunction","royaltyFee","CustomRoyaltyFee","setFeeCollectorAccountId","setNumerator","setDenominator","setAllCollectorsAreExempt","setFallbackFee","createFixedFeeFunction","hbarAmount","amount","denominatingTokenId","exports"],"sources":["../../../src/nftSDKFunctions/create-royalty-fee-function.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { CustomRoyaltyFee } from '@hashgraph/sdk';\nimport { createFixedFeeFunction } from './create-fixed-fee-function';\nimport { RoyaltyFeeType } from '../types/fees';\nimport { validatePropsForRoyaltyFeeFunction } from '../utils/validate-props';\n\nexport const createRoyaltyFeeFunction = ({\n  collectorAccountId,\n  numerator,\n  denominator,\n  fallbackFee,\n  allCollectorsAreExempt,\n}: RoyaltyFeeType) => {\n  validatePropsForRoyaltyFeeFunction({ collectorAccountId, numerator, denominator });\n\n  const royaltyFee = new CustomRoyaltyFee()\n    .setFeeCollectorAccountId(collectorAccountId)\n    .setNumerator(numerator)\n    .setDenominator(denominator);\n\n  if (allCollectorsAreExempt) {\n    royaltyFee.setAllCollectorsAreExempt(allCollectorsAreExempt);\n  }\n\n  if (fallbackFee) {\n    royaltyFee.setFallbackFee(\n      createFixedFeeFunction({\n        collectorAccountId: fallbackFee.collectorAccountId,\n        hbarAmount: fallbackFee.hbarAmount,\n        amount: fallbackFee.amount,\n        denominatingTokenId: fallbackFee.denominatingTokenId,\n        allCollectorsAreExempt: fallbackFee.allCollectorsAreExempt,\n      })\n    );\n  }\n\n  return royaltyFee;\n};\n"],"mappings":";;;;;;AAmBA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,uBAAA,GAAAD,OAAA;AAEA,IAAAE,cAAA,GAAAF,OAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,MAAMG,wBAAwB,GAAGC,IAAA,IAMlB;EAAA,IANmB;IACvCC,kBAAkB;IAClBC,SAAS;IACTC,WAAW;IACXC,WAAW;IACXC;EACc,CAAC,GAAAL,IAAA;EACf,IAAAM,iDAAkC,EAAC;IAAEL,kBAAkB;IAAEC,SAAS;IAAEC;EAAY,CAAC,CAAC;EAElF,MAAMI,UAAU,GAAG,IAAIC,qBAAgB,CAAC,CAAC,CACtCC,wBAAwB,CAACR,kBAAkB,CAAC,CAC5CS,YAAY,CAACR,SAAS,CAAC,CACvBS,cAAc,CAACR,WAAW,CAAC;EAE9B,IAAIE,sBAAsB,EAAE;IAC1BE,UAAU,CAACK,yBAAyB,CAACP,sBAAsB,CAAC;EAC9D;EAEA,IAAID,WAAW,EAAE;IACfG,UAAU,CAACM,cAAc,CACvB,IAAAC,8CAAsB,EAAC;MACrBb,kBAAkB,EAAEG,WAAW,CAACH,kBAAkB;MAClDc,UAAU,EAAEX,WAAW,CAACW,UAAU;MAClCC,MAAM,EAAEZ,WAAW,CAACY,MAAM;MAC1BC,mBAAmB,EAAEb,WAAW,CAACa,mBAAmB;MACpDZ,sBAAsB,EAAED,WAAW,CAACC;IACtC,CAAC,CACH,CAAC;EACH;EAEA,OAAOE,UAAU;AACnB,CAAC;AAACW,OAAA,CAAAnB,wBAAA,GAAAA,wBAAA","ignoreList":[]}