{"version":3,"file":"create-collection.js","names":["_sdk","require","_dictionary","_validateProps","createCollectionFunction","_ref","client","myPrivateKey","collectionName","collectionSymbol","keys","treasuryAccount","treasuryAccountPrivateKey","maxSupply","customFees","expirationTime","autoRenewAccount","autoRenewAccountPrivateKey","autoRenewPeriod","memo","validatePropsForCreateCollection","treasuryAccountId","getOperator","accountId","treasuryAccountPrivateKeyId","transaction","TokenCreateTransaction","setTokenName","setTokenSymbol","setTokenType","TokenType","NonFungibleUnique","setSupplyKey","supply","setTreasuryAccountId","admin","setAdminKey","KYC","setKycKey","freeze","setFreezeKey","wipe","setWipeKey","feeSchedule","setFeeScheduleKey","pause","setPauseKey","setSupplyType","TokenSupplyType","Finite","setMaxSupply","setCustomFees","setExpirationTime","setAutoRenewAccountId","AccountId","fromString","setAutoRenewPeriod","setTokenMemo","freezeWith","signTx","sign","txResponse","execute","receipt","getReceipt","tokenId","Error","dictionary","createCollection","collectionNotCreated","toString","exports"],"sources":["../../../src/nftSDKFunctions/create-collection.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { AccountId, PrivateKey, TokenCreateTransaction, TokenSupplyType, TokenType } from '@hashgraph/sdk';\nimport { dictionary } from '../utils/constants/dictionary';\nimport { CreateCollectionType } from '../types/create-collection';\nimport { validatePropsForCreateCollection } from '../utils/validate-props';\n\nexport const createCollectionFunction = async ({\n  client,\n  myPrivateKey,\n  collectionName,\n  collectionSymbol,\n  keys,\n  treasuryAccount,\n  treasuryAccountPrivateKey,\n  maxSupply,\n  customFees,\n  expirationTime,\n  autoRenewAccount,\n  autoRenewAccountPrivateKey,\n  autoRenewPeriod,\n  memo,\n}: CreateCollectionType): Promise<string> => {\n  validatePropsForCreateCollection({\n    collectionName,\n    collectionSymbol,\n    treasuryAccount,\n    treasuryAccountPrivateKey,\n    customFees,\n    expirationTime,\n    autoRenewAccount,\n    autoRenewAccountPrivateKey,\n    autoRenewPeriod,\n    memo,\n  });\n\n  const treasuryAccountId = treasuryAccount ? treasuryAccount : client.getOperator()!.accountId;\n  const treasuryAccountPrivateKeyId: PrivateKey = treasuryAccountPrivateKey ? treasuryAccountPrivateKey : myPrivateKey;\n\n  let transaction = new TokenCreateTransaction()\n    .setTokenName(collectionName)\n    .setTokenSymbol(collectionSymbol)\n    .setTokenType(TokenType.NonFungibleUnique)\n    .setSupplyKey(keys?.supply || myPrivateKey)\n    .setTreasuryAccountId(treasuryAccountId);\n\n  if (keys?.admin) {\n    transaction = transaction.setAdminKey(keys?.admin);\n  }\n\n  if (keys?.KYC) {\n    transaction = transaction.setKycKey(keys?.KYC);\n  }\n\n  if (keys?.freeze) {\n    transaction = transaction.setFreezeKey(keys?.freeze);\n  }\n\n  if (keys?.wipe) {\n    transaction = transaction.setWipeKey(keys?.wipe);\n  }\n\n  if (keys?.feeSchedule) {\n    transaction = transaction.setFeeScheduleKey(keys?.feeSchedule);\n  }\n\n  if (keys?.pause) {\n    transaction = transaction.setPauseKey(keys?.pause);\n  }\n\n  if (maxSupply) {\n    transaction = transaction.setSupplyType(TokenSupplyType.Finite);\n    transaction = transaction.setMaxSupply(maxSupply);\n  }\n\n  if (customFees) {\n    transaction = transaction.setCustomFees(customFees);\n  }\n\n  if (expirationTime) {\n    transaction = transaction.setExpirationTime(expirationTime);\n  }\n\n  if (autoRenewAccount) {\n    transaction = transaction.setAutoRenewAccountId(AccountId.fromString(autoRenewAccount));\n  }\n\n  if (autoRenewPeriod) {\n    transaction = transaction.setAutoRenewPeriod(autoRenewPeriod);\n  }\n\n  if (memo) {\n    transaction = transaction.setTokenMemo(memo);\n  }\n\n  transaction = transaction.freezeWith(client);\n\n  let signTx = await transaction.sign(<PrivateKey>treasuryAccountPrivateKeyId);\n\n  if (keys?.admin) {\n    signTx = await transaction.sign(<PrivateKey>keys?.admin);\n  }\n\n  if (autoRenewAccountPrivateKey) {\n    signTx = await transaction.sign(autoRenewAccountPrivateKey);\n  }\n\n  const txResponse = await signTx.execute(client);\n\n  const receipt = await txResponse.getReceipt(client);\n\n  if (!receipt.tokenId) {\n    throw new Error(dictionary.createCollection.collectionNotCreated);\n  }\n\n  return receipt.tokenId.toString();\n};\n"],"mappings":";;;;;;AAmBA,IAAAA,IAAA,GAAAC,OAAA;AACA,IAAAC,WAAA,GAAAD,OAAA;AAEA,IAAAE,cAAA,GAAAF,OAAA;AAtBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAMO,MAAMG,wBAAwB,GAAG,MAAAC,IAAA,IAeK;EAAA,IAfE;IAC7CC,MAAM;IACNC,YAAY;IACZC,cAAc;IACdC,gBAAgB;IAChBC,IAAI;IACJC,eAAe;IACfC,yBAAyB;IACzBC,SAAS;IACTC,UAAU;IACVC,cAAc;IACdC,gBAAgB;IAChBC,0BAA0B;IAC1BC,eAAe;IACfC;EACoB,CAAC,GAAAd,IAAA;EACrB,IAAAe,+CAAgC,EAAC;IAC/BZ,cAAc;IACdC,gBAAgB;IAChBE,eAAe;IACfC,yBAAyB;IACzBE,UAAU;IACVC,cAAc;IACdC,gBAAgB;IAChBC,0BAA0B;IAC1BC,eAAe;IACfC;EACF,CAAC,CAAC;EAEF,MAAME,iBAAiB,GAAGV,eAAe,GAAGA,eAAe,GAAGL,MAAM,CAACgB,WAAW,CAAC,CAAC,CAAEC,SAAS;EAC7F,MAAMC,2BAAuC,GAAGZ,yBAAyB,GAAGA,yBAAyB,GAAGL,YAAY;EAEpH,IAAIkB,WAAW,GAAG,IAAIC,2BAAsB,CAAC,CAAC,CAC3CC,YAAY,CAACnB,cAAc,CAAC,CAC5BoB,cAAc,CAACnB,gBAAgB,CAAC,CAChCoB,YAAY,CAACC,cAAS,CAACC,iBAAiB,CAAC,CACzCC,YAAY,CAACtB,IAAI,EAAEuB,MAAM,IAAI1B,YAAY,CAAC,CAC1C2B,oBAAoB,CAACb,iBAAiB,CAAC;EAE1C,IAAIX,IAAI,EAAEyB,KAAK,EAAE;IACfV,WAAW,GAAGA,WAAW,CAACW,WAAW,CAAC1B,IAAI,EAAEyB,KAAK,CAAC;EACpD;EAEA,IAAIzB,IAAI,EAAE2B,GAAG,EAAE;IACbZ,WAAW,GAAGA,WAAW,CAACa,SAAS,CAAC5B,IAAI,EAAE2B,GAAG,CAAC;EAChD;EAEA,IAAI3B,IAAI,EAAE6B,MAAM,EAAE;IAChBd,WAAW,GAAGA,WAAW,CAACe,YAAY,CAAC9B,IAAI,EAAE6B,MAAM,CAAC;EACtD;EAEA,IAAI7B,IAAI,EAAE+B,IAAI,EAAE;IACdhB,WAAW,GAAGA,WAAW,CAACiB,UAAU,CAAChC,IAAI,EAAE+B,IAAI,CAAC;EAClD;EAEA,IAAI/B,IAAI,EAAEiC,WAAW,EAAE;IACrBlB,WAAW,GAAGA,WAAW,CAACmB,iBAAiB,CAAClC,IAAI,EAAEiC,WAAW,CAAC;EAChE;EAEA,IAAIjC,IAAI,EAAEmC,KAAK,EAAE;IACfpB,WAAW,GAAGA,WAAW,CAACqB,WAAW,CAACpC,IAAI,EAAEmC,KAAK,CAAC;EACpD;EAEA,IAAIhC,SAAS,EAAE;IACbY,WAAW,GAAGA,WAAW,CAACsB,aAAa,CAACC,oBAAe,CAACC,MAAM,CAAC;IAC/DxB,WAAW,GAAGA,WAAW,CAACyB,YAAY,CAACrC,SAAS,CAAC;EACnD;EAEA,IAAIC,UAAU,EAAE;IACdW,WAAW,GAAGA,WAAW,CAAC0B,aAAa,CAACrC,UAAU,CAAC;EACrD;EAEA,IAAIC,cAAc,EAAE;IAClBU,WAAW,GAAGA,WAAW,CAAC2B,iBAAiB,CAACrC,cAAc,CAAC;EAC7D;EAEA,IAAIC,gBAAgB,EAAE;IACpBS,WAAW,GAAGA,WAAW,CAAC4B,qBAAqB,CAACC,cAAS,CAACC,UAAU,CAACvC,gBAAgB,CAAC,CAAC;EACzF;EAEA,IAAIE,eAAe,EAAE;IACnBO,WAAW,GAAGA,WAAW,CAAC+B,kBAAkB,CAACtC,eAAe,CAAC;EAC/D;EAEA,IAAIC,IAAI,EAAE;IACRM,WAAW,GAAGA,WAAW,CAACgC,YAAY,CAACtC,IAAI,CAAC;EAC9C;EAEAM,WAAW,GAAGA,WAAW,CAACiC,UAAU,CAACpD,MAAM,CAAC;EAE5C,IAAIqD,MAAM,GAAG,MAAMlC,WAAW,CAACmC,IAAI,CAAapC,2BAA2B,CAAC;EAE5E,IAAId,IAAI,EAAEyB,KAAK,EAAE;IACfwB,MAAM,GAAG,MAAMlC,WAAW,CAACmC,IAAI,CAAalD,IAAI,EAAEyB,KAAK,CAAC;EAC1D;EAEA,IAAIlB,0BAA0B,EAAE;IAC9B0C,MAAM,GAAG,MAAMlC,WAAW,CAACmC,IAAI,CAAC3C,0BAA0B,CAAC;EAC7D;EAEA,MAAM4C,UAAU,GAAG,MAAMF,MAAM,CAACG,OAAO,CAACxD,MAAM,CAAC;EAE/C,MAAMyD,OAAO,GAAG,MAAMF,UAAU,CAACG,UAAU,CAAC1D,MAAM,CAAC;EAEnD,IAAI,CAACyD,OAAO,CAACE,OAAO,EAAE;IACpB,MAAM,IAAIC,KAAK,CAACC,sBAAU,CAACC,gBAAgB,CAACC,oBAAoB,CAAC;EACnE;EAEA,OAAON,OAAO,CAACE,OAAO,CAACK,QAAQ,CAAC,CAAC;AACnC,CAAC;AAACC,OAAA,CAAAnE,wBAAA,GAAAA,wBAAA","ignoreList":[]}