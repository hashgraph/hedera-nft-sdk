{"version":3,"file":"browser.js","names":["_createCollection","require","_increaseNftSupply","_logIn","_mintSharedMetadataFunction","_mintUniqueMetadataFunction","_estimateNftMintingInHbar","_estimateNftMintingInDollars","HederaNFTSDK","constructor","accountId","privateKey","network","localNode","localMirrorNode","mirrorNodeUrl","client","logIn","myAccountId","myPrivateKey","createCollection","_ref","collectionName","collectionSymbol","treasuryAccountPrivateKey","treasuryAccount","keys","maxSupply","customFees","expirationTime","autoRenewAccount","autoRenewAccountPrivateKey","autoRenewPeriod","memo","createCollectionFunction","estimateCreateCollectionInDollars","_","Error","estimateCreateCollectionInHbar","estimateNftMintingInHbar","_ref2","amountOfNfts","estimateNftMintingInDollars","_ref3","mintSharedMetadata","_ref4","tokenId","amount","batchSize","metaData","supplyKey","mintSharedMetadataFunction","mintUniqueMetadata","_ref5","pathToMetadataURIsFile","metadata","mintUniqueMetadataFunction","metadataArray","increaseNFTSupply","_ref6","nftId","exports"],"sources":["../../../src/nftSDKFunctions/browser.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport { Client, NftId, PrivateKey } from '@hashgraph/sdk';\nimport { CreateCollectionKeysType, CustomFeeType } from '../types/create-collection';\nimport { Network } from '../types/mint-token';\nimport { createCollectionFunction } from './create-collection';\nimport { increaseNFTSupply } from './increase-nft-supply';\nimport { logIn } from './log-in';\nimport { mintSharedMetadataFunction } from './mint-shared-metadata-function';\nimport { mintUniqueMetadataFunction } from './mint-unique-metadata-function.browser';\nimport { LocalNode } from '../types/login';\nimport { estimateNftMintingInHbar } from './estimate-nft-minting-in-hbar';\nimport { estimateNftMintingInDollars } from './estimate-nft-minting-in-dollars';\n\nexport class HederaNFTSDK /** Browser */ {\n  accountId: string;\n  privateKey: PrivateKey;\n  client: Client;\n  network: Network;\n  mirrorNodeUrl?: string;\n\n  constructor(\n    accountId: string,\n    privateKey: PrivateKey,\n    network: Network,\n    localNode?: LocalNode,\n    localMirrorNode?: string,\n    mirrorNodeUrl?: string\n  ) {\n    this.accountId = accountId;\n    this.privateKey = privateKey;\n    this.client = logIn({\n      myAccountId: accountId,\n      myPrivateKey: privateKey,\n      network: network,\n      localNode: localNode,\n      localMirrorNode: localMirrorNode,\n    });\n    this.network = network;\n    this.mirrorNodeUrl = mirrorNodeUrl;\n  }\n\n  createCollection({\n    collectionName,\n    collectionSymbol,\n    treasuryAccountPrivateKey,\n    treasuryAccount,\n    keys,\n    maxSupply,\n    customFees,\n    expirationTime,\n    autoRenewAccount,\n    autoRenewAccountPrivateKey,\n    autoRenewPeriod,\n    memo,\n  }: {\n    collectionName: string;\n    collectionSymbol: string;\n    treasuryAccountPrivateKey?: PrivateKey;\n    treasuryAccount?: string;\n    keys?: CreateCollectionKeysType;\n    maxSupply?: number;\n    customFees?: CustomFeeType[];\n    expirationTime?: Date;\n    autoRenewAccount?: string;\n    autoRenewAccountPrivateKey?: PrivateKey;\n    autoRenewPeriod?: number;\n    memo?: string;\n  }) {\n    return createCollectionFunction({\n      client: this.client,\n      collectionName,\n      collectionSymbol,\n      keys,\n      myPrivateKey: this.privateKey,\n      treasuryAccount,\n      treasuryAccountPrivateKey,\n      maxSupply,\n      customFees,\n      expirationTime,\n      autoRenewAccount,\n      autoRenewAccountPrivateKey,\n      autoRenewPeriod,\n      memo,\n    });\n  }\n\n  estimateCreateCollectionInDollars(_: {\n    collectionName: string;\n    collectionSymbol: string;\n    treasuryAccountPrivateKey?: PrivateKey;\n    treasuryAccount?: string;\n    keys?: CreateCollectionKeysType;\n    customFees?: CustomFeeType[];\n  }) {\n    throw new Error('No estimateCreateCollectionInDollars browser implementation');\n  }\n\n  estimateCreateCollectionInHbar(_: {\n    collectionName: string;\n    collectionSymbol: string;\n    treasuryAccountPrivateKey?: PrivateKey;\n    treasuryAccount?: string;\n    keys?: CreateCollectionKeysType;\n    customFees?: CustomFeeType[];\n  }) {\n    throw new Error('No estimateCreateCollectionInHbar browser implementation');\n  }\n\n  estimateNftMintingInHbar({ amountOfNfts }: { amountOfNfts: number }) {\n    return estimateNftMintingInHbar({ amountOfNfts, mirrorNodeUrl: this.mirrorNodeUrl, network: this.network });\n  }\n\n  estimateNftMintingInDollars({ amountOfNfts }: { amountOfNfts: number }) {\n    return estimateNftMintingInDollars({ amountOfNfts });\n  }\n\n  mintSharedMetadata({\n    tokenId,\n    amount,\n    batchSize = 5,\n    metaData,\n    supplyKey,\n  }: {\n    tokenId: string;\n    amount: number;\n    batchSize?: number;\n    metaData: string;\n    supplyKey?: PrivateKey;\n  }) {\n    return mintSharedMetadataFunction({\n      client: this.client,\n      tokenId,\n      amount,\n      batchSize,\n      metaData,\n      supplyKey: supplyKey ? supplyKey : this.privateKey,\n    });\n  }\n\n  mintUniqueMetadata({\n    tokenId,\n    batchSize = 5,\n    supplyKey,\n    pathToMetadataURIsFile,\n    metadata,\n  }: {\n    tokenId: string;\n    batchSize?: number;\n    supplyKey: PrivateKey;\n    pathToMetadataURIsFile?: string;\n    metadata?: string[];\n  }) {\n    return mintUniqueMetadataFunction({\n      client: this.client,\n      tokenId,\n      batchSize,\n      supplyKey: supplyKey,\n      pathToMetadataURIsFile,\n      metadataArray: metadata,\n    });\n  }\n\n  increaseNFTSupply({\n    nftId,\n    amount,\n    batchSize = 5,\n    supplyKey,\n  }: {\n    nftId: NftId;\n    amount: number;\n    batchSize?: number;\n    supplyKey?: PrivateKey;\n  }) {\n    return increaseNFTSupply({\n      client: this.client,\n      network: this.network,\n      nftId,\n      amount,\n      batchSize,\n      supplyKey: supplyKey ? supplyKey : this.privateKey,\n      mirrorNodeUrl: this.mirrorNodeUrl,\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]}