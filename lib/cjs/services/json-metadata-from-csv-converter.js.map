{"version":3,"file":"json-metadata-from-csv-converter.js","names":["processCSVRowEntry","metadataObject","header","cell","secondHeader","headerAttributes","headerProperties","attributes","properties","includes","push","trait_type","value","parseCSVRowsToMetadataObjects","_ref","csvParsedRows","shift","metadataObjectsFromCSVRows","map","csvRow","csvRowKeyValuesAsEntries","Object","entries","result","reduce","currentMetadataObject","_ref2","keys","length"],"sources":["../../../src/services/json-metadata-from-csv-converter.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport type { CSVRow, MetadataObject } from '../types/csv';\n\nfunction processCSVRowEntry(\n  metadataObject: MetadataObject,\n  header: string,\n  cell: string,\n  secondHeader: CSVRow,\n  headerAttributes: string,\n  headerProperties: string,\n  attributes: Record<string, string>[],\n  properties: Record<string, string>\n): MetadataObject {\n  if (cell && header.includes(headerAttributes)) {\n    attributes.push({ trait_type: secondHeader[header], value: cell });\n  } else if (cell && header.includes(headerProperties)) {\n    properties[secondHeader[header]] = cell;\n  } else if (cell) {\n    metadataObject[header] = cell;\n  }\n\n  return metadataObject;\n}\n\nexport function parseCSVRowsToMetadataObjects({\n  csvParsedRows,\n  headerAttributes,\n  headerProperties,\n}: {\n  csvParsedRows: CSVRow[];\n  headerAttributes: string;\n  headerProperties: string;\n}): MetadataObject[] {\n  const secondHeader = csvParsedRows[0];\n  csvParsedRows.shift();\n\n  const metadataObjectsFromCSVRows = csvParsedRows.map((csvRow): MetadataObject => {\n    const csvRowKeyValuesAsEntries = Object.entries(csvRow);\n    const properties: Record<string, string> = {};\n    const attributes: Record<string, string>[] = [];\n\n    const result = csvRowKeyValuesAsEntries.reduce<MetadataObject>((currentMetadataObject, [header, cell]) => {\n      return processCSVRowEntry(\n        currentMetadataObject,\n        header,\n        cell,\n        secondHeader,\n        headerAttributes,\n        headerProperties,\n        attributes,\n        properties\n      );\n    }, {});\n\n    if (Object.keys(properties).length) {\n      result.properties = properties;\n    }\n\n    if (attributes.length) {\n      result.attributes = attributes;\n    }\n\n    return result;\n  });\n\n  return metadataObjectsFromCSVRows;\n}\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SAASA,kBAAkBA,CACzBC,cAA8B,EAC9BC,MAAc,EACdC,IAAY,EACZC,YAAoB,EACpBC,gBAAwB,EACxBC,gBAAwB,EACxBC,UAAoC,EACpCC,UAAkC,EAClB;EAChB,IAAIL,IAAI,IAAID,MAAM,CAACO,QAAQ,CAACJ,gBAAgB,CAAC,EAAE;IAC7CE,UAAU,CAACG,IAAI,CAAC;MAAEC,UAAU,EAAEP,YAAY,CAACF,MAAM,CAAC;MAAEU,KAAK,EAAET;IAAK,CAAC,CAAC;EACpE,CAAC,MAAM,IAAIA,IAAI,IAAID,MAAM,CAACO,QAAQ,CAACH,gBAAgB,CAAC,EAAE;IACpDE,UAAU,CAACJ,YAAY,CAACF,MAAM,CAAC,CAAC,GAAGC,IAAI;EACzC,CAAC,MAAM,IAAIA,IAAI,EAAE;IACfF,cAAc,CAACC,MAAM,CAAC,GAAGC,IAAI;EAC/B;EAEA,OAAOF,cAAc;AACvB;AAEO,SAASY,6BAA6BA,CAAAC,IAAA,EAQxB;EAAA,IARyB;IAC5CC,aAAa;IACbV,gBAAgB;IAChBC;EAKF,CAAC,GAAAQ,IAAA;EACC,MAAMV,YAAY,GAAGW,aAAa,CAAC,CAAC,CAAC;EACrCA,aAAa,CAACC,KAAK,CAAC,CAAC;EAErB,MAAMC,0BAA0B,GAAGF,aAAa,CAACG,GAAG,CAAEC,MAAM,IAAqB;IAC/E,MAAMC,wBAAwB,GAAGC,MAAM,CAACC,OAAO,CAACH,MAAM,CAAC;IACvD,MAAMX,UAAkC,GAAG,CAAC,CAAC;IAC7C,MAAMD,UAAoC,GAAG,EAAE;IAE/C,MAAMgB,MAAM,GAAGH,wBAAwB,CAACI,MAAM,CAAiB,CAACC,qBAAqB,EAAAC,KAAA,KAAqB;MAAA,IAAnB,CAACxB,MAAM,EAAEC,IAAI,CAAC,GAAAuB,KAAA;MACnG,OAAO1B,kBAAkB,CACvByB,qBAAqB,EACrBvB,MAAM,EACNC,IAAI,EACJC,YAAY,EACZC,gBAAgB,EAChBC,gBAAgB,EAChBC,UAAU,EACVC,UACF,CAAC;IACH,CAAC,EAAE,CAAC,CAAC,CAAC;IAEN,IAAIa,MAAM,CAACM,IAAI,CAACnB,UAAU,CAAC,CAACoB,MAAM,EAAE;MAClCL,MAAM,CAACf,UAAU,GAAGA,UAAU;IAChC;IAEA,IAAID,UAAU,CAACqB,MAAM,EAAE;MACrBL,MAAM,CAAChB,UAAU,GAAGA,UAAU;IAChC;IAEA,OAAOgB,MAAM;EACf,CAAC,CAAC;EAEF,OAAON,0BAA0B;AACnC","ignoreList":[]}