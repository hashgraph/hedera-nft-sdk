{"version":3,"file":"upload-service.browser.js","names":["_filter","_interopRequireDefault","require","_isNull","_map","_dictionary","_errorToMessage","obj","__esModule","default","UploadService","constructor","service","uploadFilesFromPath","_","Error","uploadBlobFiles","handleBlobUpload","metadata","dictionary","errors","uploadService","noMetadata","file","Blob","JSON","stringify","type","url","uploadFile","content","e","errorMessage","errorToMessage","uploadMetadataList","metadatas","metadataUris","Promise","all","map","filter","metadataUri","isNull","exports"],"sources":["../../../src/services/upload-service.browser.ts"],"sourcesContent":["/*-\n *\n * Hedera NFT SDK\n *\n * Copyright (C) 2024 Hedera Hashgraph, LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n */\nimport filter from 'lodash/filter';\nimport isNull from 'lodash/isNull';\nimport map from 'lodash/map';\nimport { BufferFile } from '../types/buffer-file';\nimport { dictionary } from '../utils/constants/dictionary';\nimport { errorToMessage } from '../helpers/error-to-message';\nimport { NFTMetadata } from '../types/nft-metadata';\nimport { FileStorage } from '../types/file-storage-service';\n\nexport type FileStorageURL = `https://${string}/`;\nexport type FileStorageUploadUrl = string;\ntype UploadServiceReturn = {\n  content: Blob | BufferFile;\n  url: string;\n};\n\nexport class UploadService {\n  private service: FileStorage;\n\n  constructor(service: FileStorage) {\n    this.service = service;\n  }\n\n  public async uploadFilesFromPath(_: string[]): Promise<UploadServiceReturn[]> {\n    throw new Error(\"Not implemented in browser\");\n  }\n\n  public async uploadBlobFiles(_: (Blob | BufferFile)[]): Promise<UploadServiceReturn[]> {\n    throw new Error(\"Not implemented in browser\");\n  }\n\n  public async handleBlobUpload(metadata: Partial<NFTMetadata> | NFTMetadata): Promise<UploadServiceReturn | null> {\n    if (!metadata) {\n      throw new Error(dictionary.errors.uploadService.noMetadata);\n    }\n\n    try {\n      const file = new Blob([JSON.stringify(metadata)], { type: 'application/json' });\n      // @ts-expect-error Argument of type 'Blob' is assignable to parameter of type 'import(\"buffer\").Blob\n      const url = await this.service.uploadFile(file);\n\n      return {\n        content: file,\n        url,\n      };\n    } catch (e) {\n      const errorMessage = errorToMessage(e);\n\n      throw new Error(errorMessage);\n    }\n  }\n\n  public async uploadMetadataList(metadatas: NFTMetadata[]): Promise<UploadServiceReturn[]> {\n    const metadataUris = await Promise.all(map(metadatas, async (metadata) => this.handleBlobUpload(metadata)));\n\n    return filter(metadataUris, (metadataUri): metadataUri is UploadServiceReturn => !isNull(metadataUri));\n  }\n}\n"],"mappings":";;;;;;AAmBA,IAAAA,OAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,OAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,IAAA,GAAAH,sBAAA,CAAAC,OAAA;AAEA,IAAAG,WAAA,GAAAH,OAAA;AACA,IAAAI,eAAA,GAAAJ,OAAA;AAA6D,SAAAD,uBAAAM,GAAA,WAAAA,GAAA,IAAAA,GAAA,CAAAC,UAAA,GAAAD,GAAA,KAAAE,OAAA,EAAAF,GAAA;AAxB7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAiBO,MAAMG,aAAa,CAAC;EAGzBC,WAAWA,CAACC,OAAoB,EAAE;IAChC,IAAI,CAACA,OAAO,GAAGA,OAAO;EACxB;EAEA,MAAaC,mBAAmBA,CAACC,CAAW,EAAkC;IAC5E,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,MAAaC,eAAeA,CAACF,CAAwB,EAAkC;IACrF,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;EAC/C;EAEA,MAAaE,gBAAgBA,CAACC,QAA4C,EAAuC;IAC/G,IAAI,CAACA,QAAQ,EAAE;MACb,MAAM,IAAIH,KAAK,CAACI,sBAAU,CAACC,MAAM,CAACC,aAAa,CAACC,UAAU,CAAC;IAC7D;IAEA,IAAI;MACF,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACR,QAAQ,CAAC,CAAC,EAAE;QAAES,IAAI,EAAE;MAAmB,CAAC,CAAC;MAC/E;MACA,MAAMC,GAAG,GAAG,MAAM,IAAI,CAAChB,OAAO,CAACiB,UAAU,CAACN,IAAI,CAAC;MAE/C,OAAO;QACLO,OAAO,EAAEP,IAAI;QACbK;MACF,CAAC;IACH,CAAC,CAAC,OAAOG,CAAC,EAAE;MACV,MAAMC,YAAY,GAAG,IAAAC,8BAAc,EAACF,CAAC,CAAC;MAEtC,MAAM,IAAIhB,KAAK,CAACiB,YAAY,CAAC;IAC/B;EACF;EAEA,MAAaE,kBAAkBA,CAACC,SAAwB,EAAkC;IACxF,MAAMC,YAAY,GAAG,MAAMC,OAAO,CAACC,GAAG,CAAC,IAAAC,YAAG,EAACJ,SAAS,EAAE,MAAOjB,QAAQ,IAAK,IAAI,CAACD,gBAAgB,CAACC,QAAQ,CAAC,CAAC,CAAC;IAE3G,OAAO,IAAAsB,eAAM,EAACJ,YAAY,EAAGK,WAAW,IAAyC,CAAC,IAAAC,eAAM,EAACD,WAAW,CAAC,CAAC;EACxG;AACF;AAACE,OAAA,CAAAjC,aAAA,GAAAA,aAAA","ignoreList":[]}